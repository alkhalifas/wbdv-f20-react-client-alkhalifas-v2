{"version":3,"sources":["logo.svg","App.js","services/CourseService.js","services/WidgetService.js","components/CourseEditor/widgets/HeadingWidgetComponent.js","components/CourseEditor/widgets/ParagraphWidgetComponent.js","components/CourseEditor/widgets/ListWidgetComponent.js","components/CourseEditor/widgets/ImageWidgetComponent.js","components/CourseEditor/WidgetListComponent.js","actions/widgetActions.js","services/ModuleService.js","components/CourseEditor/ModuleListComponent.js","services/LessonService.js","components/CourseEditor/LessonsTabComponent.js","services/TopicService.js","components/CourseEditor/TopicPillsComponent.js","components/CourseEditor/CourseEditorComponent.js","serviceWorker.js","components/users/LoginComponent.js","components/users/RegisterComponent.js","components/users/ProfileComponent.js","components/CourseRowComponent.js","components/CourseListComponent.js","components/CourseCardContainer.js","components/CourseGridComponent.js","components/users/HomeComponent.js","containers/CourseManagerContainer.js","reducers/widgetReducer.js","reducers/moduleReducer.js","reducers/courseReducer.js","reducers/lessonReducer.js","reducers/topicReducer.js","index.js"],"names":["module","exports","App","url","findAllCourses","fetch","then","response","json","createCourse","newCourse","method","body","JSON","stringify","headers","deleteCourse","courseId","updateCourse","WIDGET_URL","TOPIC_URL","name","type","topicId","widget","widgetId","newWidget","HeadingWidgetComponent","editing","deleteWidget","updateWidget","findWidgetsForTopic","className","style","width","height","onClick","event","widgetOrder","id","value","onChange","target","size","placeholder","ParagraphWidgetComponent","text","ListWidgetComponent","listOfItems","split","console","log","map","item","key","ImageWidgetComponent","src","connect","state","widgets","widgetReducer","dispatch","widgetService","createWidget","status","editWidget","okWidget","changeEditing","createWidgetForTopic","htmlFor","aria-hidden","courseUrl","moduleUrl","moduleId","newModule","modules","moduleReducer","course","courseReducer","lessonReducer","okModule","moduleService","_id","editModule","updateModule","deleteModule","createModule","title","actualModule","to","lessonUrl","newLesson","lessonId","lessons","topicReducer","okLesson","lesson","LessonService","editLesson","updateLesson","deleteLesson","createLesson","actualLesson","topicUrl","newTopic","topics","okTopic","topic","TopicService","editTopic","updateTopic","deleteTopic","createTopic","actualTopic","data-toggle","CourseEditorComponent","this","props","match","params","findCourseById","findModulesForCourse","findLessonsForModule","findTopicsForLesson","prevProps","prevState","snapshot","viewBox","fill","xmlns","fillRule","d","React","Component","courses","lessonService","topicService","WidgetService","findAllWidgets","Boolean","window","location","hostname","LoginComponent","href","RegisterComponent","ProfileComponent","rel","role","readOnly","CourseRowComponent","newTitle","setState","owner","modified","CourseListComponent","courseBeingEdited","filter","c","catch","error","addCourse","Date","toDateString","actualCourse","editCourse","instructor","CourseCardContainer","color","substring","fill-rule","CourseGridComponent","HomeComponent","CourseManagerContainer","layout","aria-controls","aria-expanded","aria-label","data-target","path","exact","component","initialState","action","activeMod","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"yKAAAA,EAAOC,QAAU,IAA0B,kC,4KCyB5BC,I,+BCzBTC,EAAM,mEAMCC,EAAiB,kBAC1BC,MAAMF,GACDG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAEtBC,EAAe,SAACC,GAAD,OACxBL,MAAMF,EAAK,CACPQ,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACL,eAAgB,sBAGnBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAEtBQ,EAAe,SAACC,GAAD,OACxBZ,MAAM,GAAD,OAAIF,EAAJ,YAAWc,GAAY,CACxBN,OAAQ,WAEPL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAEtBU,EAAe,SAACD,EAAUP,GAAX,OACxBL,MAAM,GAAD,OAAIF,EAAJ,YAAWc,GAAY,CACxBN,OAAQ,MACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACL,eAAgB,sBAGnBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,W,uBClC7BW,EAAa,kEACbC,EAAa,iEAiDJ,EA/CQ,kBACnBf,MAAMc,GACDb,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WA6CpB,EAtCM,kBACrBH,MAAMc,EAAY,CACVR,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACO,KAAM,aACAC,KAAM,YAElCP,QAAS,CACL,eAAgB,sBAGnBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WA4BpB,EA3Ca,SAACe,GAAD,OACxBlB,MAAM,GAAD,OAAIe,EAAJ,YAAiBG,EAAjB,aACCjB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAyCrB,EA1Bc,SAACe,EAASC,GAAV,OACzBnB,MAAM,GAAD,OAAIe,EAAJ,YAAiBG,EAAjB,YACC,CACIZ,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACU,WACtBT,QAAS,CACL,eAAgB,sBAGzBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAiBpB,EANa,SAACiB,GAAD,OACxBpB,MAAM,GAAD,OAAIc,EAAJ,YAAkBM,GAAY,CAC/Bd,OAAQ,YAID,EAfa,SAACc,EAAUC,GAAX,OACxBrB,MAAM,GAAD,OAAIc,EAAJ,YAAkBM,GAAY,CAC/Bd,OAAQ,MACRC,KAAMC,KAAKC,UAAUY,GACrBX,QAAS,CACL,eAAgB,sBAErBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCqElBmB,G,MA5GgB,SAAC,GAAD,IAEvBC,EAFuB,EAEvBA,QACAJ,EAHuB,EAGvBA,OACAK,EAJuB,EAIvBA,aACAC,EALuB,EAKvBA,aALuB,EAMvBP,QANuB,EAOvBQ,oBAPuB,OAS3B,6BAGQH,GACA,yBAAKI,UAAU,6CAA6CC,MAAO,CAACC,MAAOV,EAAOU,MAAOC,OAAQX,EAAOW,SACpG,yBAAKH,UAAU,WACX,wBAAIA,UAAU,SAASR,EAAOF,KAA9B,WAGA,4BAAQU,UAAU,kBACVI,QAAS,SAACC,GAAD,OAAWP,EAAa,2BAC1BN,GADyB,IAE5Bc,YAAad,EAAOc,YAAc,OAE7C,uBAAGN,UAAU,qBACd,4BAAQA,UAAU,kBACVI,QAAS,SAACC,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKc,YAAad,EAAOc,YAAc,OAE9E,uBAAGN,UAAU,uBACd,4BAAQA,UAAU,iBACVI,QAAS,kBAAKP,EAAaL,EAAOe,MAEzC,uBAAGP,UAAU,yBAEd,4BAAQA,UAAU,qBACVQ,MAAOhB,EAAOF,KACdmB,SAAU,SAACJ,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKF,KAAMe,EAAMK,OAAOF,WAG7D,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,UAGJ,yBAAKR,UAAU,QACX,4BAAKR,EAAOc,eAIhB,4BAAQN,UAAU,eACVQ,MAAOhB,EAAOmB,KACdF,SAAU,SAACJ,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKmB,KAAMN,EAAMK,OAAOF,WAI7D,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,aAAd,cAGR,6BACI,2BAAOI,YAAapB,EAAOH,KAAMW,UAAU,eACpCS,SAAU,SAACJ,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKH,KAAMgB,EAAMK,OAAOF,eAQvEZ,GACD,yBAAKI,UAAU,+CAA+CC,MAAO,CAACC,MAAOV,EAAOU,MAAOC,OAAQ,MAC/F,yBAAKH,UAAU,WAES,cAAhBR,EAAOmB,MACP,4BAAKnB,EAAOH,MAGI,cAAhBG,EAAOmB,MACP,4BAAKnB,EAAOH,MAGI,cAAhBG,EAAOmB,MACP,4BAAKnB,EAAOH,MAGI,cAAhBG,EAAOmB,MACP,4BAAKnB,EAAOH,MAGI,cAAhBG,EAAOmB,MACP,4BAAKnB,EAAOH,WChBrBwB,EAtFkB,SAAC,GAAD,IAEzBjB,EAFyB,EAEzBA,QACAJ,EAHyB,EAGzBA,OACAK,EAJyB,EAIzBA,aACAC,EALyB,EAKzBA,aALyB,OAS7B,6BAGQF,GACA,yBAAKI,UAAU,6CAA6CC,MAAO,CAACC,MAAOV,EAAOU,MAAOC,OAAQX,EAAOW,SACpG,yBAAKH,UAAU,WACX,wBAAIA,UAAU,SAASR,EAAOF,KAA9B,WAEA,4BAAQU,UAAU,kBACVI,QAAS,SAACC,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKc,YAAad,EAAOc,YAAc,OAE9E,uBAAGN,UAAU,qBACd,4BAAQA,UAAU,kBACVI,QAAS,SAACC,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKc,YAAad,EAAOc,YAAc,OAE9E,uBAAGN,UAAU,uBACd,4BAAQA,UAAU,iBACVI,QAAS,kBAAKP,EAAaL,EAAOe,MACtC,uBAAGP,UAAU,yBAGjB,4BAAQA,UAAU,qBACVQ,MAAOhB,EAAOF,KACdmB,SAAU,SAACJ,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKF,KAAMe,EAAMK,OAAOF,WAG7D,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,UAGJ,yBAAKR,UAAU,QACX,4BAAKR,EAAOc,eASpB,6BACI,8BACIM,YAAapB,EAAOsB,KACpBd,UAAU,eACVS,SAAU,SAACJ,GAAD,OAAWP,EAAa,2BACUN,GADX,IAEKsB,KAAMT,EAAMK,OAAOF,eAUpEZ,GACD,yBAAKI,UAAU,yCAAyCC,MAAO,CAACC,MAAOV,EAAOU,MAAOC,OAAQX,EAAOW,SAChG,yBAAKH,UAAU,WAEX,4BAAKR,EAAOsB,UCgDjBC,EA5Ha,SAAC,GAAD,IAEpBnB,EAFoB,EAEpBA,QACAJ,EAHoB,EAGpBA,OACAK,EAJoB,EAIpBA,aACAC,EALoB,EAKpBA,aALoB,KAMpBP,QANoB,EAOpBQ,oBAPoB,EAQpBiB,oBARoB,MAQNxB,EAAOsB,KAAKG,MAAM,MARZ,SAUxB,6BAGQrB,GACA,yBAAKI,UAAU,6CAA6CC,MAAO,CAACC,MAAOV,EAAOU,MAAOC,OAAQ,MAC7F,yBAAKH,UAAU,WACX,wBAAIA,UAAU,SAASR,EAAOF,KAA9B,WAEA,4BAAQU,UAAU,kBACVI,QAAS,SAACC,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKc,YAAad,EAAOc,YAAc,OAE9E,uBAAGN,UAAU,qBACd,4BAAQA,UAAU,kBACVI,QAAS,SAACC,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKc,YAAad,EAAOc,YAAc,OAE9E,uBAAGN,UAAU,uBAEd,4BAAQA,UAAU,iBACVI,QAAS,kBAAKP,EAAaL,EAAOe,MACtC,uBAAGP,UAAU,yBAGjB,4BAAQA,UAAU,qBACVQ,MAAOhB,EAAOF,KACdmB,SAAU,SAACJ,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKF,KAAMe,EAAMK,OAAOF,WAG7D,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,UAGJ,yBAAKR,UAAU,QACX,4BAAKR,EAAOc,eASpB,6BACI,8BACIM,YAAapB,EAAOsB,KACpBP,GAAK,cACLN,MAAO,CAACE,OAAO,KACfK,MAAOhB,EAAOsB,KACdd,UAAU,eACVS,SAAU,SAACJ,GACPb,EAAOsB,KAAOT,EAAMK,OAAOF,MAC3BQ,EAAcxB,EAAOsB,KAAKG,MAAM,MAChCnB,EAAa,2BACwBN,GADzB,IAEsBsB,KAAMT,EAAMK,OAAOF,aAMjE,yBAAKR,UAAU,QACX,4BAAQA,UAAU,eACVQ,MAAOhB,EAAOgB,MACdC,SAAU,SAACJ,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKgB,MAAOH,EAAMK,OAAOF,WAE9D,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,aAAd,gBAMfU,QAAQC,IAAI,iBAAkB3B,EAAOgB,QAGjCZ,GAA4B,YAAjBJ,EAAOgB,OACnB,yBAAKR,UAAU,yCAAyCC,MAAO,CAACC,MAAOV,EAAOU,MAAOC,OAAQ,MACzF,yBAAKH,UAAU,WACX,uCACA,4BAEQgB,EAAYI,KAAI,SAAAC,GAAI,OAChB,4BAAKA,UAOxBzB,GAA4B,cAAjBJ,EAAOgB,OACnB,yBAAKR,UAAU,yCAAyCC,MAAO,CAACC,MAAOV,EAAOU,MAAOC,OAAQ,MACzF,yBAAKH,UAAU,WACX,yCACA,4BAEQgB,EAAYI,KAAI,SAAAC,GAAI,OACA,wBACAC,IAAI,QAAQD,WCrC7CE,EA/Ec,SAAC,GAAD,IAErB3B,EAFqB,EAErBA,QACAJ,EAHqB,EAGrBA,OACAK,EAJqB,EAIrBA,aACAC,EALqB,EAKrBA,aALqB,KAMrBP,QANqB,EAOrBQ,oBAPqB,EAQrBiB,kBARqB,OAQPxB,EAAOsB,KAAKG,MAAM,MARX,OAUzB,6BAGQrB,GACA,yBAAKI,UAAU,6CAA6CC,MAAO,CAACC,MAAOV,EAAOU,MAAOC,OAAQX,EAAOW,SACpG,yBAAKH,UAAU,WACX,wBAAIA,UAAU,SAASR,EAAOF,KAA9B,WAGA,4BAAQU,UAAU,kBACVI,QAAS,SAACC,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKc,YAAad,EAAOc,YAAc,OAE9E,uBAAGN,UAAU,qBACd,4BAAQA,UAAU,kBACVI,QAAS,SAACC,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKc,YAAad,EAAOc,YAAc,OAE9E,uBAAGN,UAAU,uBACd,4BAAQA,UAAU,iBACVI,QAAS,kBAAKP,EAAaL,EAAOe,MAEzC,uBAAGP,UAAU,yBAEd,4BAAQA,UAAU,qBACVQ,MAAOhB,EAAOF,KACdmB,SAAU,SAACJ,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKF,KAAMe,EAAMK,OAAOF,WAG7D,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,UAGJ,yBAAKR,UAAU,QACX,4BAAKR,EAAOc,eAKpB,6BACI,2BAAOM,YAAapB,EAAOrB,IACpB6B,UAAU,eACVS,SAAU,SAACJ,GAAD,OAAWP,EAAa,2BACON,GADR,IAEKrB,IAAKkC,EAAMK,OAAOF,eAQtEZ,GACD,yBAAKI,UAAU,+CAA+CC,MAAO,CAACC,MAAOV,EAAOU,MAAOC,OAAQ,MAC/F,yBAAKH,UAAU,WACX,yBACIA,UAAU,yCACVwB,IAAKhC,EAAOrB,UC8ErBsD,eApBe,SAACC,GAAD,MAAY,CACtCC,QAASD,EAAME,cAAcD,QAC7BpC,QAASmC,EAAME,cAAcrC,QAC7BK,QAAS8B,EAAME,cAAchC,YAIA,SAACiC,GAAD,MAAe,CAC5ChC,aAAc,SAACL,GAAD,OCnHU,SAACqC,EAAUpC,GAEnCqC,EAA2BrC,GACtBnB,MAAK,kBAAMuD,EAAS,CACIvC,KAAM,gBACNG,gBD8GHI,CAAagC,EAAUrC,IACjDuC,aAAc,kBCzGU,SAACF,EAAUtC,GAAX,OACxBuC,IACKxD,MAAK,SAAAkB,GAAM,OAAIqC,EAAS,CACIvC,KAAM,gBACNE,cDqGbuC,CAAaF,IACjC/B,aAAc,SAACN,GAAD,OC9HU,SAACqC,EAAUrC,GAAX,OACxBsC,EAA2BtC,EAAOe,GAAIf,GACjClB,MAAK,SAAA0D,GAAM,OAAIH,EAAS,CACrBvC,KAjBiB,gBAkBjBE,OAAQA,OD0HUM,CAAa+B,EAAUrC,IACjDyC,WAAY,SAACzC,GAAD,OCtIU,SAACqC,EAAUrC,GAAX,OACtBqC,EAAS,CAACvC,KARe,gBAQME,OAAO,2BAAKA,GAAN,IAAcI,SAAS,MDqIpCqC,CAAWJ,EAAUrC,IAC7C0C,SAAU,SAAC1C,GAAD,OCpIU,SAACqC,EAAUrC,GAAX,OACpBqC,EAAS,CAACvC,KAXe,gBAWME,OAAO,2BAAKA,GAAN,IAAcI,SAAS,MDmItCsC,CAASL,EAAUrC,IACzC2C,cAAe,kBC5IU,SAACN,GAAD,OACzBA,EAAS,CAACvC,KAHgB,mBD8IL6C,CAAcN,IACnCO,qBAAsB,SAAC7C,GAAD,OCtGU,SAACsC,EAAUtC,GAAX,OAChCuC,EAAmCvC,EAAS,CACxCF,KAAM,aACNC,KAAM,YACNwB,KAAM,SAELxC,MAAK,SAAAkB,GAAM,OAAIqC,EAAS,CACIvC,KAAM,0BACNE,cD8FE4C,CAAqBP,EAAUtC,OAMvDkC,EAhIa,SAAC,GAAD,QACJ7B,eADI,aAEJ+B,eAFI,MAEI,GAFJ,EAGJ9B,EAHI,EAGJA,aAEAsC,GALI,EAIJJ,aAJI,EAKJI,eACAC,EANI,EAMJA,qBAEAtC,EARI,EAQJA,aAEAP,GAVI,EASJ0C,WATI,EAUJ1C,SAVI,EAWJ2C,SAXI,OAYxB,yBAAKlC,UAAU,aAEX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,IAAd,YAKA,yBAAKA,UAAU,SAGX,yBAAKA,UAAU,uCACX,2BAAOA,UAAU,oCAAoCO,GAAG,aACjDjB,KAAK,WAAWc,QAAS,kBAAM+B,OACtC,2BAAOnC,UAAU,+CACVqC,QAAQ,cADf,cAqBZ,yBAAKrC,UAAU,cAQP2B,EAAQP,KAAI,SAAA5B,GAAM,OACF,yBAAK8B,IAAK9B,EAAOe,IAEO,YAAhBf,EAAOF,MACP,kBAAC,EAAD,CAAwBE,OAAQA,EACRI,QAASA,EACTC,aAAcA,EACdC,aAAcA,IAItB,cAAhBN,EAAOF,MACP,kBAAC,EAAD,CAA0BE,OAAQA,EACRI,QAASA,EACTC,aAAcA,EACdC,aAAcA,IAGxB,SAAhBN,EAAOF,MACP,kBAAC,EAAD,CAAqBE,OAAQA,EACHI,QAASA,EACTC,aAAcA,EACdC,aAAcA,IAGxB,UAAhBN,EAAOF,MACP,kBAAC,EAAD,CAAsBE,OAAQA,EACTI,QAASA,EACTC,aAAcA,EACdC,aAAcA,SAanE,4BACIE,UAAU,MACVI,QAAS,kBAAKgC,EAAqB7C,KACnC,uBAAG+C,cAAY,OACZtC,UAAU,kCE/HnBuC,EAAY,mEACZC,EAAY,mEAiCH,EAtBa,SAACC,EAAUC,GAAX,OACxBrE,MAAM,GAAD,OAAImE,EAAJ,YAAiBC,GAAY,CAC9B9D,OAAQ,MACRC,KAAMC,KAAKC,UAAU4D,GACrB3D,QAAS,CACL,eAAgB,sBAErBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAelB,EARqB,SAACS,GAAD,OAChCZ,MAAM,GAAD,OAAIkE,EAAJ,YAAiBtD,EAAjB,aACAX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAMpB,EA/BsB,SAACS,EAAUyD,GAAX,OACjCrE,MAAM,GAAD,OAAIkE,EAAJ,YAAiBtD,EAAjB,YAAqC,CACtCN,OAAQ,OACRC,KAAMC,KAAKC,UAAU4D,GACrB3D,QAAS,CACL,eAAgB,sBAErBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAwBlB,EAba,SAACiE,GAAD,OACxBpE,MAAM,GAAD,OAAImE,EAAJ,YAAiBC,GAAY,CAC9B9D,OAAQ,WACTL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,W,OCqHlBiD,eA9Ce,SAACC,GAAD,MAAY,CACtCiB,QAASjB,EAAMkB,cAAcD,QAC7BE,OAAQnB,EAAMoB,cAAcD,OAC5BJ,SAAUf,EAAMqB,cAAcN,aAGD,SAACZ,GAAD,MAAe,CAC5CmB,SAAU,SAAChF,GAAD,OACNiF,EAA2BjF,EAAOkF,IAAlC,2BACOlF,GADP,IACe4B,SAAS,KACrBtB,MAAK,SAAA0D,GAAM,OAAIH,EAAS,CACIvC,KAAM,gBACNtB,OAAO,2BAAKA,GAAN,IAAc4B,SAAS,UAEhEuD,WAAY,SAACnF,GAAD,OACRiF,EAA2BjF,EAAOkF,IAAlC,2BACOlF,GADP,IACe4B,SAAS,KACrBtB,MAAK,SAAA0D,GAAM,OACFH,EAAS,CACIvC,KAAM,gBACNtB,OAAO,2BAAKA,GAAN,IAAc4B,SAAS,UAG1DwD,aAAc,SAACpF,GAAD,OACViF,EAA2BjF,EAAOkF,IAAKlF,GAClCM,MAAK,SAAA0D,GAAM,OAAIH,EAAS,CACIvC,KAAM,gBACNtB,OAAQA,QAG7CqF,aAAc,SAACrF,GAAD,OACViF,EAA2BjF,EAAOkF,KAC7B5E,MAAK,SAAA0D,GAAM,OAAIH,EAAS,CACIvC,KAAM,gBACNtB,OAAQA,QAE7CsF,aAAc,SAACT,GAAD,OACVI,EAAoCJ,EAAOK,IAAK,CAC5CK,MAAO,eACRjF,MAAK,SAAAkF,GAAY,OAAI3B,EAAS,CACIvC,KAAM,2BACNtB,OAAQwF,WAKtC/B,EAxIa,SAAC,GAAD,IAEpBgB,EAFoB,EAEpBA,SAFoB,IAGpBI,cAHoB,MAGX,GAHW,MAIpBF,eAJoB,MAIV,GAJU,EAMpBU,EANoB,EAMpBA,aACAC,EAPoB,EAOpBA,aACAF,EARoB,EAQpBA,aACAD,EAToB,EASpBA,WACAH,EAVoB,EAUpBA,SAVoB,OAYxB,6BACI,wCACA,4BAAKH,EAAOU,OACZ,6BACI,wBAAIvD,UAAU,0BACT2C,EAAQvB,KAAI,SAAApD,GAAM,OACF,wBAAIsD,IAAKtD,EAAOkF,IACZlD,UAAS,iDAA4CyC,IAAazE,EAAOkF,IAAI,UAAU,MAGlFlF,EAAO4B,SACR,8BAGK,kBAAC,IAAD,CAAMI,UAAS,eAAUyC,IAAazE,EAAOkF,IAAI,cAAc,IAC3DO,GAAE,gBAAWZ,EAAOK,IAAlB,oBAAiClF,EAAOkF,MAC3ClF,EAAOuF,OAEX,0BAAMvD,UAAU,eACZ,4BACIA,UAAU,gCACVI,QAAS,kBAAM+C,EAAWnF,KAC/B,uBAAGgC,UAAU,mBAQpBhC,EAAO4B,SACP,8BACO,2BACIa,SAAU,SAACJ,GAAD,OAAW+C,EAAa,2BACOpF,GADR,IAEKuF,MAAOlD,EAAMK,OAAOF,UAE1DA,MAAOxC,EAAOuF,QACd,4BACIvD,UAAU,mBACVI,QAAS,kBAAM4C,EAAShF,KAC5B,uBAAGgC,UAAU,6BAEhB,4BACIA,UAAU,8BACVI,QAAS,kBAAMiD,EAAarF,KAC5B,uBAAGgC,UAAU,uBAM7B,mCAQrB,wBAAIA,UAAU,0CACV,yBAAKA,UAAU,eACX,4BACIA,UAAU,MACVI,QAAS,kBAAMkD,EAAaT,KAFhC,aC9ElBa,EAAY,mEAiCH,EARqB,SAACjB,GAAD,OAChCpE,MAAM,GAAD,OA3BS,mEA2BT,YAAiBoE,EAAjB,aACAnE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAMpB,EA/BsB,SAACiE,EAAUkB,GAAX,OACjCtF,MAAM,GAAD,OAJS,mEAIT,YAAiBoE,EAAjB,YAAqC,CACtC9D,OAAQ,OACRC,KAAMC,KAAKC,UAAU6E,GACrB5E,QAAS,CACL,eAAgB,sBAErBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAwBlB,EAba,SAACoF,GAAD,OACxBvF,MAAM,GAAD,OAAIqF,EAAJ,YAAiBE,GAAW,CAC7BjF,OAAQ,WACTL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAUlB,EAtBa,SAACoF,EAAUD,GAAX,OACxBtF,MAAM,GAAD,OAAIqF,EAAJ,YAAiBE,GAAY,CAC9BjF,OAAQ,MACRC,KAAMC,KAAKC,UAAU6E,GACrB5E,QAAS,CACL,eAAgB,sBAErBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WC+GlBiD,eAhDe,SAACC,GAAD,MAAY,CACtCmC,QAASnC,EAAMqB,cAAcc,QAC7BpB,SAAUf,EAAMqB,cAAcN,SAC9BI,OAAQnB,EAAMoB,cAAcD,OAC5Be,SAAUlC,EAAMoC,aAAaF,aAGA,SAAC/B,GAAD,MAAe,CAE5CkC,SAAU,SAACC,GAAD,OACNC,EAA2BD,EAAOd,IAAlC,2BACOc,GADP,IACepE,SAAS,KACrBtB,MAAK,SAAA0D,GAAM,OAAIH,EAAS,CACIvC,KAAM,gBACN0E,OAAO,2BAAKA,GAAN,IAAcpE,SAAS,UAEhEsE,WAAY,SAACF,GAAD,OACRC,EAA2BD,EAAOd,IAAlC,2BACOc,GADP,IACepE,SAAS,KACrBtB,MAAK,SAAA0D,GAAM,OACFH,EAAS,CACIvC,KAAM,gBACN0E,OAAO,2BAAKA,GAAN,IAAcpE,SAAS,UAG1DuE,aAAc,SAACH,GAAD,OACVC,EAA2BD,EAAOd,IAAKc,GAClC1F,MAAK,SAAA0D,GAAM,OAAIH,EAAS,CACIvC,KAAM,gBACN0E,OAAQA,QAE7CI,aAAc,SAACR,GAAD,OACVK,EAA2BL,GACtBtF,MAAK,SAAA0D,GAAM,OAAIH,EAAS,CACIvC,KAAM,gBACNsE,iBAErCS,aAAc,SAAC5B,GAAD,OACVwB,EACIxB,EAAU,CACNc,MAAO,eAEVjF,MAAK,SAAAgG,GAAY,OAAIzC,EAAS,CACIvC,KAAM,2BACN0E,OAAQM,WAIxC7C,EA7Ha,SAAC,GAAD,QAEpBoB,cAFoB,MAEX,GAFW,EAGpBJ,EAHoB,EAGpBA,SAHoB,IAIpBoB,eAJoB,MAIV,GAJU,EAKpBD,EALoB,EAKpBA,SACAS,EANoB,EAMpBA,aACAD,EAPoB,EAOpBA,aACAD,EARoB,EAQpBA,aACAD,EAToB,EASpBA,WACAH,EAVoB,EAUpBA,SAVoB,OAYxB,6BACI,wCACA,wBAAI/D,UAAU,gBAEN6D,EAAQzC,KAAI,SAAA4C,GAAM,OACF,wBAAI1C,IAAK0C,EAAOd,IACZlD,UAAU,YACV,uBAAGA,UAAS,mBAAc4D,IAAaI,EAAOd,IAAM,SACA,MAE3Cc,EAAOpE,SACR,8BAEI,kBAAC,IAAD,CACI6D,GAAE,gBAAWZ,EAAOK,IAAlB,oBAAiCT,EAAjC,oBAAqDuB,EAAOd,MAC7Dc,EAAOT,OAGZ,4BACIvD,UAAU,4BACVI,QAAS,kBAAM8D,EAAWF,KAC9B,uBAAGhE,UAAU,kBAKjBgE,EAAOpE,SACP,8BAEI,2BACIa,SAAU,SAACJ,GAAD,OAAW8D,EAAa,2BACOH,GADR,IAEKT,MAAOlD,EAAMK,OAAOF,UAE1DA,MAAOwD,EAAOT,QAClB,4BACIvD,UAAU,uBACVI,QAAS,kBAAM2D,EAASC,KACxB,uBAAGhE,UAAU,iBAEjB,4BACIA,UAAU,uBACVI,QAAS,kBAAMgE,EAAaJ,EAAOd,OAC/B,uBAAGlD,UAAU,4BASzD,wBAAIA,UAAU,YACV,uBAAGA,UAAU,YACT,4BACIA,UAAU,4BACVI,QAAS,kBAAMiE,EAAa5B,KAFhC,YCtEd8B,EAAW,kEAiCF,EARoB,SAACX,GAAD,OAC/BvF,MAAM,GAAD,OA3BS,mEA2BT,YAAiBuF,EAAjB,YACAtF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAMpB,EA/BqB,SAACoF,EAAUY,GAAX,OAChCnG,MAAM,GAAD,OAJS,mEAIT,YAAiBuF,EAAjB,WAAoC,CACrCjF,OAAQ,OACRC,KAAMC,KAAKC,UAAU0F,GACrBzF,QAAS,CACL,eAAgB,sBAErBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAwBlB,EAbY,SAAAe,GAAO,OAC9BlB,MAAM,GAAD,OAAIkG,EAAJ,YAAgBhF,GAAU,CAC3BZ,OAAQ,WACTL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAUlB,EAtBY,SAACe,EAASiF,GAAV,OACvBnG,MAAM,GAAD,OAAIkG,EAAJ,YAAgBhF,GAAW,CAC5BZ,OAAQ,MACRC,KAAMC,KAAKC,UAAU0F,GACrBzF,QAAS,CACL,eAAgB,sBAErBT,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WC0IlBiD,eA7De,SAACC,GAAD,MAAY,CACtC+C,OAAQ/C,EAAMoC,aAAaW,OAC3BlF,QAASmC,EAAMoC,aAAavE,QAC5BsE,QAASnC,EAAMoC,aAAaD,QAC5BD,SAAUlC,EAAMoC,aAAaF,SAC7BnB,SAAUf,EAAMqB,cAAcN,SAC9BI,OAAQnB,EAAMoB,cAAcD,WAIC,SAAChB,GAAD,MAAe,CAC5C6C,QAAS,SAACC,GAAD,OACLC,EAAyBD,EAAMzB,IAA/B,2BACOyB,GADP,IACc/E,SAAS,KACpBtB,MAAK,SAAA0D,GAAM,OAAIH,EAAS,CACIvC,KAAM,eACNqF,MAAM,2BAAKA,GAAN,IAAa/E,SAAS,UAE9DiF,UAAW,SAACF,GAAD,OACPC,EAAyBD,EAAMzB,IAA/B,2BACOyB,GADP,IACc/E,SAAS,KACpBtB,MAAK,SAAA0D,GAAM,OACFH,EAAS,CACIvC,KAAM,eACNqF,MAAM,2BAAKA,GAAN,IAAa/E,SAAS,UAGxDkF,YAAa,SAACH,GAAD,OACTC,EAAyBD,EAAMzB,IAAKyB,GAC/BrG,MAAK,SAAA0D,GAAM,OAAIH,EAAS,CACIvC,KAAM,eACNqF,MAAOA,QAG5CI,YAAa,SAACxF,GAGVqF,EAAyBrF,GACpBjB,MAAK,SAAA0D,GAEFH,EAAS,CACIvC,KAAM,eACNC,gBAIzByF,YAAa,SAACpB,GACVgB,EACIhB,EAAU,CACNL,MAAO,cAEVjF,MAAK,SAAA2G,GACFpD,EAAS,CACIvC,KAAM,0BACNqF,MAAOM,WAOrBxD,EAtJa,oBAIpBoB,cAJoB,MAIX,GAJW,EAKpBJ,EALoB,EAKpBA,SACAmB,EANoB,EAMpBA,SANoB,IAOpBa,cAPoB,MAOb,GAPa,EAQpBlF,EARoB,EAQpBA,QAEAyF,EAVoB,EAUpBA,YACAD,EAXoB,EAWpBA,YACAD,EAZoB,EAYpBA,YACAD,EAboB,EAapBA,UACAH,EAdoB,EAcpBA,QAdoB,OAgBxB,6BACI,uCAGA,wCAAcnF,EAAd,KAEA,wBAAIS,UAAU,kBAGNyE,EAAOrD,KAAI,SAAAuD,GAAK,OACD,wBAAIrD,IAAKqD,EAAMzB,IACXlD,UAAU,+BACV,uBAAGA,UAAS,mBAAcT,IAAYoF,EAAMzB,IAAI,SAAS,IACtDgC,cAAY,QAENP,EAAM/E,SACP,8BACI,kBAAC,IAAD,CAAMI,UAAS,eAAUT,IAAYoF,EAAMzB,IAAI,cAAc,IACzDO,GAAE,gBAAWZ,EAAOK,IAAlB,oBAAiCT,EAAjC,oBAAqDmB,EAArD,mBAAwEe,EAAMzB,MAC9EyB,EAAMpB,OAEZ,4BACIvD,UAAU,4BACVI,QAAS,kBAAMyE,EAAUF,KAC5B,uBAAG3E,UAAU,kBAKlB2E,EAAM/E,SACN,8BACK,2BACIa,SAAU,SAACJ,GAAD,OAAWyE,EAAY,2BACQH,GADT,IAEMpB,MAAOlD,EAAMK,OAAOF,UAE1DA,MAAOmE,EAAMpB,QAEjB,4BACIvD,UAAU,uBACVI,QAAS,kBAAMsE,EAAQC,KACvB,uBAAG3E,UAAU,iBAEjB,4BACIA,UAAU,uBACVI,QAAS,kBAAM2E,EAAYJ,EAAMzB,OACjC,uBAAGlD,UAAU,4BAYrD,wBAAIA,UAAU,+BACV,uBAAGA,UAAU,YACT,4BACIA,UAAU,uBACVI,QAAS,kBAAM4E,EAAYpB,KAF/B,YCtEduB,E,kLAGE,IAAMlG,EAAWmG,KAAKC,MAAMC,MAAMC,OAAOtG,SACnCwD,EAAW2C,KAAKC,MAAMC,MAAMC,OAAO9C,SACnCmB,EAAWwB,KAAKC,MAAMC,MAAMC,OAAO3B,SACnCrE,EAAU6F,KAAKC,MAAMC,MAAMC,OAAOhG,QAGxC6F,KAAKC,MAAMG,eAAevG,GAC1BmG,KAAKC,MAAMI,qBAAqBxG,GAChCmG,KAAKC,MAAMK,qBAAqBjD,GAChC2C,KAAKC,MAAMM,oBAAoB/B,GAE5B3E,GACCmG,KAAKC,MAAMG,eAAevG,GAG3BwD,IACC2C,KAAKC,MAAMK,qBAAqBjD,GAChC2C,KAAKC,MAAMM,oBAAoB/B,IAEhCA,GACCwB,KAAKC,MAAMM,oBAAoB/B,GAGhCrE,GACC6F,KAAKC,MAAMtF,oBAAoBR,K,yCAUpBqG,EAAWC,EAAWC,GACrC,IAAMrD,EAAW2C,KAAKC,MAAMC,MAAMC,OAAO9C,SACnCmB,EAAWwB,KAAKC,MAAMC,MAAMC,OAAO3B,SACnCrE,EAAU6F,KAAKC,MAAMC,MAAMC,OAAOhG,QAGrCkD,IAAamD,EAAUN,MAAMC,OAAO9C,UACnC2C,KAAKC,MAAMK,qBAAqBjD,GAIjCmB,IAAagC,EAAUN,MAAMC,OAAO3B,UACnCwB,KAAKC,MAAMM,oBAAoB/B,GAIhCrE,IAAYqG,EAAUN,MAAMC,OAAOhG,SAClC6F,KAAKC,MAAMtF,oBAAoBR,GAEhCA,GACC6F,KAAKC,MAAMtF,oBAAoBR,K,+BASnC,OACI,6BACI,yBAAKS,UAAU,OACX,6CACA,4BAAQA,UAAU,cACd,kBAAC,IAAD,CAAMyD,GAAG,SAASzD,UAAU,iBACxB,yBAAKE,MAAM,MAAMC,OAAO,MAAM4F,QAAQ,YACjC/F,UAAU,sBAAsBgG,KAAK,eACrCC,MAAM,8BACP,0BAAMC,SAAS,UACTC,EAAE,gQAMxB,yBAAKnG,UAAU,OACX,yBAAKA,UAAU,SACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,SACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,a,GAzFYoG,IAAMC,WAuJ3B5E,eAtDe,SAACC,GAAD,MAAY,CACtCmB,OAAQnB,EAAMoB,cAAcD,WAGC,SAAChB,GAAD,MAAe,CAC5C2D,eAAgB,SAACvG,GAAD,OdjHU,SAACA,GAAD,OAC1BZ,MAAM,GAAD,OAAIF,EAAJ,YAAWc,IACXX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,Uc+GDgH,CAAevG,GACxCX,MAAK,SAAAgI,GAAO,OAAIzE,EAAS,CACSvC,KAAM,cACNuD,OAAQyD,QAE/Cb,qBAAsB,SAACxG,GAAD,OAAcgE,EAAmChE,GAClEX,MAAK,SAAAqE,GAAO,OAAId,EAAS,CACUvC,KAAM,0BACNqD,QAASA,QAEjD+C,qBAAsB,SAACjD,GAAD,OAClB8D,EAAmC9D,GAC9BnE,MAAK,SAAAuF,GAAO,OAAIhC,EAAS,CACIvC,KAAM,0BACNuE,UACApB,iBAEtCkD,oBAAqB,SAAC/B,GAAD,OACjB4C,EAAiC5C,GAC5BtF,MAAK,SAAAmG,GAAM,OAAI5C,EAAS,CACKvC,KAAM,yBACNmF,SACAb,iBAUtC7D,oBAAqB,SAACR,GAAD,OACjBkH,EAAkClH,GAC7BjB,MAAK,SAAAqD,GAAO,OAAIE,EAAS,CACIvC,KAAM,yBACNqC,UACApC,gBAGtCmH,eAAgB,kBACZD,IACKnI,MAAK,SAAAqD,GAAO,OAAIE,EAAS,CACIvC,KAAM,mBACNqC,mBAK3BF,CAEd0D,GC1JmBwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxB,MACvB,2D,WC2CSyB,GA3DQ,kBACnB,6BACI,yBAAK/G,UAAU,aAEX,uCACA,8BAEI,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,0BAA0BqC,QAAQ,YAAnD,aAEA,yBAAKrC,UAAU,aACX,2BAAOA,UAAU,wCAAwCO,GAAG,WACrDK,YAAY,mBAI3B,yBAAKZ,UAAU,kBACX,2BAAOA,UAAU,0BAA0BqC,QAAQ,YAAnD,aAEA,yBAAKrC,UAAU,aACX,2BAAOA,UAAU,wCAAwCO,GAAG,WACrDK,YAAY,gBAAgBtB,KAAK,eAIhD,yBAAKU,UAAU,kBACX,2BAAOA,UAAU,4BACjB,yBAAKA,UAAU,aACX,uBAAGA,UAAU,mDACVgH,KAAK,2CADR,WAEA,yBAAKhH,UAAU,OACX,yBAAKA,UAAU,wCACX,uBAAGgH,KAAK,KAAR,qBAEJ,yBAAKhH,UAAU,iCACX,uBAAGA,UAAU,cACVgH,KAAK,6CADR,gBAOhB,yBAAKhH,UAAU,kBACX,2BAAOA,UAAU,4BACjB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,uBAAGgH,KAAK,iBAAR,kBCgBjBC,GA/DW,kBACtB,6BACI,yBAAKjH,UAAU,aAEX,wCACA,8BAEI,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,0BAA0BqC,QAAQ,eAAnD,aAEA,yBAAKrC,UAAU,aACX,2BAAOA,UAAU,wCAAwCO,GAAG,cACrDK,YAAY,mBAI3B,yBAAKZ,UAAU,kBACX,2BAAOA,UAAU,0BAA0BqC,QAAQ,eAAnD,YAEA,yBAAKrC,UAAU,aACX,2BAAOA,UAAU,wCAAwCO,GAAG,cACrDK,YAAY,gBAAgBtB,KAAK,eAIhD,yBAAKU,UAAU,kBACX,2BAAOA,UAAU,0BAA0BqC,QAAQ,qBAAnD,mBAEA,yBAAKrC,UAAU,aACX,2BAAOA,UAAU,+CACVO,GAAG,oBAAoBK,YAAY,gBAAgBtB,KAAK,eAKvE,yBAAKU,UAAU,kBACX,2BAAOA,UAAU,4BACjB,yBAAKA,UAAU,aACX,uBAAGA,UAAU,sDACVgH,KAAK,0CAA0CzG,GAAG,eADrD,YAKA,yBAAKP,UAAU,OACX,yBAAKA,UAAU,wCACX,uBAAGgH,KAAK,iBAAR,WAEJ,yBAAKhH,UAAU,iCACX,uBAAGA,UAAU,cACVgH,KAAK,uCADR,iBCmDjBE,GAnGU,kBACrB,6BAEI,yBAAKlH,UAAU,aACX,0BAAMgH,KAAK,2BAA2BG,IAAI,eACtC,uCACA,8BAEI,yBAAKnH,UAAU,mCAAmCoH,KAAK,SAAvD,mCAIA,yBAAKpH,UAAU,kBACX,2BAAOA,UAAU,mDACVqC,QAAQ,eADf,aAGA,yBAAKrC,UAAU,aACX,2BAAOA,UAAU,eAAeO,GAAG,cAC5BK,YAAY,eAAeyG,SAAS,OAInD,yBAAKrH,UAAU,kBACX,2BAAOA,UAAU,0BAA0BqC,QAAQ,YAAnD,aAEA,yBAAKrC,UAAU,aACX,2BAAOA,UAAU,wCAAwCO,GAAG,WACrDK,YAAY,gBAAgBtB,KAAK,eAIhD,yBAAKU,UAAU,kBACX,2BAAOA,UAAU,gDACVqC,QAAQ,YADf,UAGA,yBAAKrC,UAAU,aACX,2BAAOA,UAAU,eAAeO,GAAG,WAC5BK,YAAY,mBAI3B,yBAAKZ,UAAU,kBACX,2BAAOA,UAAU,gDACVqC,QAAQ,YADf,UAGA,yBAAKrC,UAAU,aACX,2BAAOA,UAAU,eAAeO,GAAG,WAC5BK,YAAY,wBAI3B,yBAAKZ,UAAU,kBACX,2BAAOA,UAAU,+CACVqC,QAAQ,WADf,SAGA,yBAAKrC,UAAU,aACX,4BAAQA,UAAU,eAAeO,GAAG,WAChC,4BAAQC,MAAM,WAAd,WACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,SAAd,YAKZ,yBAAKR,UAAU,kBACX,2BAAOA,UAAU,8CACVqC,QAAQ,UADf,kBAGA,yBAAKrC,UAAU,aACX,2BAAOA,UAAU,eAAeO,GAAG,SAASjB,KAAK,OAC1CkB,MAAM,iBAIrB,yBAAKR,UAAU,kBACX,2BAAOA,UAAU,4BACjB,yBAAKA,UAAU,aACX,4BAAQA,UAAU,oDACVO,GAAG,aADX,YAOR,yBAAKP,UAAU,kBACX,2BAAOA,UAAU,4BACjB,yBAAKA,UAAU,aACX,uBAAGA,UAAU,mDACVgH,KAAK,gBAAgBzG,GAAG,aAD3B,gB,QClFP+G,G,4MACjB5F,MAAQ,CACJ9B,SAAS,EACTiD,OAAQ,EAAKwC,MAAMxC,Q,uDAEb,IAAD,OACL,OACI,4BACI,4BAgBQuC,KAAK1D,MAAM9B,SACX,2BACII,UAAU,eACVS,SAAU,SAACJ,GACP,IAAMkH,EAAWlH,EAAMK,OAAOF,MAC9B,EAAKgH,UAAS,SAAA3B,GAAS,MAAK,CACxBhD,OAAO,2BAAKgD,EAAUhD,QAAhB,IAAwBU,MAAOgE,SAG7C/G,MAAO4E,KAAK1D,MAAMmB,OAAOU,SAG5B6B,KAAK1D,MAAM9B,SACZ,kBAAC,IAAD,CAAM6D,GAAE,gBAAW2B,KAAKC,MAAMxC,OAAOK,MAAQkC,KAAKC,MAAMxC,OAAOU,MAA/D,MAIR,4BAAK6B,KAAKC,MAAMxC,OAAO4E,OAEvB,4BAAKrC,KAAKC,MAAMxC,OAAO6E,UAGvB,6BAEStC,KAAK1D,MAAM9B,SACZ,4BACIQ,QAAS,kBAAM,EAAKoH,SAAS,CAAC5H,SAAS,KACvCI,UAAU,iBAAgB,uBAAGA,UAAU,iBAG3CoF,KAAK1D,MAAM9B,SACX,4BAAQI,UAAU,gBAAgBI,QAAS,WACvClB,EAAa,EAAKwC,MAAMmB,OAAOK,IAAK,EAAKxB,MAAMmB,QAAQvE,MAAK,SAAA0D,OAC5D,EAAKwF,SAAS,CACI5H,SAAU,MAG5B,uBAAGI,UAAU,kBAMzB,4BACI,4BACII,QAAS,kBAAM,EAAKiF,MAAMrG,aAAa,EAAKqG,MAAMxC,SAClD7C,UAAU,iBACV,uBAAGA,UAAU,4B,GAvEWoG,IAAMC,WC+FvCsB,G,4MA/FXjG,MAAQ,CACJ4E,QAAS,GACTsB,kBAAmB,I,EAYvB5I,aAAe,SAAC6D,GACZ7D,EAAa6D,EAAOK,KACf5E,MAAK,SAAA0D,GAAM,OAAI,EAAKwF,UAAS,SAAA3B,GAAS,MAAI,CACTS,QAAST,EAAUS,QAAQuB,QAAO,SAAAC,GAAC,OAAIA,EAAE5E,MAAQL,EAAOK,cAGzF6E,OAAM,SAAAC,Q,EAKfC,UAAY,WACR,IAAMvJ,EAAY,CACd6E,MAAO,wBACPkE,MAAO,KACPC,UAAW,IAAIQ,MAAQC,gBAG3B1J,EAAaC,GACRJ,MAAK,SAAA8J,GAAY,OAAI,EAAKZ,UAAS,SAAA3B,GAAS,MAAK,CAC9CS,QAAQ,GAAD,oBACAT,EAAUS,SADV,CACmB8B,Y,EAKtCC,WAAa,SAACxF,GACV,EAAK2E,SAAS,CACII,kBAAmB/E,K,kEArCpB,IAAD,OAChBzE,IACKE,MAAK,SAAAgI,GACF,EAAKkB,SAAS,CACIlB,QAASA,S,+BAqC7B,IAAD,OACL,OACI,6BACI,yBAAKtG,UAAU,OACX,yBAAKA,UAAW,UACZ,+CAAoB,2BAAIoF,KAAKC,MAAMiD,cAEvC,yBAAKtI,UAAU,0BACX,4BAAQA,UAAU,iBACd,kBAAC,IAAD,CAAMyD,GAAG,SAAQ,uBAAGzD,UAAU,kBAM1C,2BAAOA,UAAU,+BACb,+BACA,4BACI,2CACA,qCACA,2CACA,iCACA,iCACA,mCAGJ,+BAEIoF,KAAK1D,MAAM4E,QAAQlF,KAAI,SAAAyB,GAAM,OACF,kBAAC,GAAD,CACIvB,IAAKuB,EAAOK,IACZlE,aAAc,EAAKA,aACnB6D,OAAQA,SAK/C,4BACIzC,QAASgF,KAAK6C,UACdjI,UAAU,mBAFd,mB,GArFkBoG,IAAMC,WC6EzBkC,I,kNA1EX7G,MAAQ,CACJ9B,SAAS,EACTiD,OAAQ,EAAKwC,MAAMxC,Q,uDAGb,IAAD,OACL,OACQ,yBAAK7C,UAAU,iEACX,yBAAKA,UAAU,eACX,uBAAGC,MAAO,CAACuI,MAAO,SAAUxI,UAAU,+BAE1C,yBAAKA,UAAU,eAEPoF,KAAK1D,MAAM9B,SACX,2BACII,UAAU,eACVS,SAAU,SAACJ,GACP,IAAMkH,EAAWlH,EAAMK,OAAOF,MAC9B,EAAKgH,UAAS,SAAA3B,GAAS,MAAK,CACxBhD,OAAO,2BAAKgD,EAAUhD,QAAhB,IAAwBU,MAAOgE,SAG7C/G,MAAO4E,KAAK1D,MAAMmB,OAAOU,SAG5B6B,KAAK1D,MAAM9B,SACZ,kBAAC,IAAD,CAAM6D,GAAE,gBAAW2B,KAAKC,MAAMxC,OAAOK,MAArC,UACQkC,KAAKC,MAAMxC,OAAOU,MAAMkF,UAAU,EAAE,IAD5C,aAKR,yBAAKzI,UAAU,aACX,yBAAKA,UAAU,iBACVoF,KAAKC,MAAMxC,OAAO6E,UAEvB,yBAAK1H,UAAU,OACX,4BACII,QAAS,kBAAM,EAAKiF,MAAMrG,aAAa,EAAKqG,MAAMxC,SAClD7C,UAAU,iBACV,yBAAKA,UAAU,oDACVgG,KAAK,eAAe7F,OAAO,MAAM4F,QAAQ,YAAY7F,MAAM,MAC3D+F,MAAM,8BACP,0BACIE,EAAE,6SACFuC,YAAU,cAGtB,6BAEStD,KAAK1D,MAAM9B,SACZ,4BACIQ,QAAS,kBAAM,EAAKoH,SAAS,CAAC5H,SAAS,KACvCI,UAAU,iBAAgB,uBAAGA,UAAU,iBAG3CoF,KAAK1D,MAAM9B,SACX,4BACIQ,QAAS,WACLlB,EAAa,EAAKwC,MAAMmB,OAAOK,IAAK,EAAKxB,MAAMmB,QAC1CvE,MAAK,SAAA0D,GAAM,OAAI,EAAKwF,SAAS,CAAC5H,SAAS,QAEhDI,UAAU,gBAAe,uBAAGA,UAAU,yB,GA/D5CoG,IAAMC,YC6FzBsC,G,4MA3FXjH,MAAQ,CACJ4E,QAAS,GACTsB,kBAAmB,I,EAYvB5I,aAAe,SAAC6D,GACZ7D,EAAa6D,EAAOK,KACf5E,MAAK,SAAA0D,GAAM,OAAI,EAAKwF,UAAS,SAAA3B,GAAS,MAAI,CACTS,QAAST,EAAUS,QAAQuB,QAAO,SAAAC,GAAC,OAAIA,EAAE5E,MAAQL,EAAOK,cAGzF6E,OAAM,SAAAC,Q,EAKfC,UAAY,WACR,IAAMvJ,EAAY,CACd6E,MAAO,wBACPkE,MAAO,KACPC,UAAW,IAAIQ,MAAQC,gBAG3B1J,EAAaC,GACRJ,MAAK,SAAA8J,GAAY,OAAI,EAAKZ,UAAS,SAAA3B,GAAS,MAAK,CAC9CS,QAAQ,GAAD,oBACAT,EAAUS,SADV,CACmB8B,Y,EAKtCC,WAAa,SAACxF,GACV,EAAK2E,SAAS,CACII,kBAAmB/E,K,kEArCpB,IAAD,OAChBzE,IACKE,MAAK,SAAAgI,GACF,EAAKkB,SAAS,CACIlB,QAASA,S,+BAqC7B,IAAD,OACL,OACI,6BACI,yBAAKtG,UAAU,OACX,yBAAKA,UAAW,UACZ,+CAAoB,2BAAIoF,KAAKC,MAAMiD,cAEvC,yBAAKtI,UAAU,0BACX,4BAAQA,UAAU,iBACd,kBAAC,IAAD,CAAMyD,GAAG,UAAS,uBAAGzD,UAAU,uBAI3C,yBAAKA,UAAU,OAEPoF,KAAK1D,MAAM4E,QAAQlF,KAAI,SAAAyB,GAAM,OACF,kBAAC,GAAD,CACIvB,IAAKuB,EAAOK,IACZlE,aAAc,EAAKA,aACnB6D,OAAQA,OAG3C,yBAAK7C,UAAU,iEACX,yBAAKA,UAAU,eACX,uBAAGC,MAAO,CAACuI,MAAO,SAAUxI,UAAU,6CAE1C,4BACII,QAASgF,KAAK6C,UACdjI,UAAU,QACV,uBAAGC,MAAO,CAACuI,MAAO,SAAUxI,UAAU,uD,GA7EhCoG,IAAMC,WCiGzBuC,GAtGO,kBAClB,6BACI,yBAAK5I,UAAU,yBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,qBAAd,0BACA,uBAAGA,UAAU,mBAAb,wXAgBR,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,qBAAd,wBAEA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,oCACA,wBAAIA,UAAU,iCAAd,uFAOZ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,mCACA,wBAAIA,UAAU,iCAAd,uGAOZ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,8BACA,wBAAIA,UAAU,iCAAd,+GAQZ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,wBACA,wBAAIA,UAAU,iCAAd,8GAQZ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,sBACA,wBAAIA,UAAU,iCAAd,iIASZ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,iBACA,wBAAIA,UAAU,iCAAd,2HC/Ef6I,GAAb,4MACInH,MAAQ,CACJ4E,QAAS,GACTwC,OAAQ,SAHhB,uDAMQ,OACI,kBAAC,IAAD,KACI,yBAAK9I,UAAU,aACX,yBACIA,UAAU,mFACV,uBAAGA,UAAU,eAAegH,KAAK,KAAI,2CACrC,4BAAQ+B,gBAAc,aAAaC,gBAAc,QACzCC,aAAW,oBAAoBjJ,UAAU,iBACzCkJ,cAAY,cAAchE,cAAY,WAAW5F,KAAK,UAE1D,0BAAMU,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BO,GAAG,cACzC,wBAAIP,UAAU,sBACV,kBAAC,IAAD,CAAMyD,GAAG,IAAIzD,UAAU,mBAAvB,SACA,kBAAC,IAAD,CAAMyD,GAAG,SAASzD,UAAU,mBAA5B,UACA,kBAAC,IAAD,CAAMyD,GAAG,YAAYzD,UAAU,mBAA/B,aACA,kBAAC,IAAD,CAAMyD,GAAG,WAAWzD,UAAU,mBAA9B,YACA,kBAAC,IAAD,CAAMyD,GAAG,SAASzD,UAAU,mBAA5B,qBAIZ,6BACI,iCACA,oCASJ,kBAAC,IAAD,CAAOmJ,KAAK,IAAIC,OAAK,EAACC,UAAWT,KACjC,kBAAC,IAAD,CAAOO,KAAK,SAASC,OAAK,EAACC,UAAWtC,KACtC,kBAAC,IAAD,CAAOoC,KAAK,YAAYC,OAAK,EAACC,UAAWpC,KACzC,kBAAC,IAAD,CAAOkC,KAAK,WAAWC,OAAK,EAACC,UAAWnC,KACxC,kBAAC,IAAD,CAAOiC,KAAK,SAASC,OAAK,GACtB,kBAAC,GAAD,CAAqB9C,QAASlB,KAAK1D,MAAM4E,QAASgC,WAAW,qBAEjE,kBAAC,IAAD,CAAOa,KAAK,QAAQC,OAAK,GACrB,kBAAC,GAAD,CAAqB9C,QAASlB,KAAK1D,MAAM4E,QAASgC,WAAW,qBAGjE,kBAAC,IAAD,CACIa,KAAM,CAAC,kBACA,oCACA,sDACA,uEAEPC,OAAK,EACLC,UAAWlE,UAzDnC,GAA4CiB,IAAMC,W,SCR5CiD,GAAe,CACjB3H,QAAS,GACT/B,SAAU,GAqDCgC,GAlDO,WAAmC,IAAlCF,EAAiC,uDAAzB4H,GAAcC,EAAW,uCACpD,OAAQA,EAAOjK,MACX,IAAK,yBACD,OAAO,2BACAoC,GADP,IAEIC,QAAS4H,EAAO5H,QAChBpC,QAASgK,EAAOhK,UAExB,IAAK,mBACD,OAAO,2BACAmC,GADP,IAEIC,QAAS4H,EAAO5H,UAExB,IlBjBqB,gBkBkBjB,MAAO,CACHA,QAAQ,GAAD,oBAAMD,EAAMC,SAAZ,CAAqB4H,EAAO/J,UAE3C,IAAK,0BACD,OAAO,2BACAkC,GADP,IAEIC,QAAQ,GAAD,oBACAD,EAAMC,SADN,CAEH4H,EAAO/J,WAGnB,IlB5BqB,gBkB6BjB,MAAO,CACHmC,QAASD,EAAMC,QAAQP,KACnB,SAAA5B,GAAM,OAAIA,EAAOe,KAAOgJ,EAAO/J,OAAOe,GAC5BgJ,EAAO/J,OAASA,MAGtC,IlBlCsB,iBkBmClB,OAAO,2BACAkC,GADP,IAEI9B,SAAU8B,EAAM9B,UAExB,IlB1CqB,gBkB8CjB,OAFHsB,QAAQC,IAAI,wBAAyBoI,GAE3B,CACH5H,QAASD,EAAMC,QAAQkG,QAAO,SAAArI,GAAM,OAAIA,EAAOe,KAAOgJ,EAAO9J,aAGrE,QACI,OAAOiC,ICrDb4H,GAAe,CACjB3G,QAAS,GACT6G,UAAW,IAwCA5G,GArCO,WAAiC,IAAhClB,EAA+B,uDAAzB4H,GAAcC,EAAW,uCAClD,OAAQA,EAAOjK,MACX,IAAK,gBACD,OAAO,2BACAoC,GADP,IAEIiB,QAASjB,EAAMiB,QACVvB,KAAI,SAAApD,GAAM,OAAIA,EAAOkF,MAAQqG,EAAOvL,OAAOkF,IAAMqG,EAAOvL,OAASA,OAE9E,IAAK,0BAKL,IAAK,cACD,OAAO,2BACA0D,GADP,IAEIiB,QAAS4G,EAAO5G,UAExB,IAAK,gBACD,OAAO,2BACAjB,GADP,IAEIiB,QAASjB,EAAMiB,QAAQkF,QAAO,SAAA7J,GAAM,OAAIA,EAAOkF,MAAQqG,EAAOvL,OAAOkF,SAE7E,IAAK,2BACD,OAAO,2BACAxB,GADP,IAEIiB,QAAQ,GAAD,oBACAjB,EAAMiB,SADN,CAEH4G,EAAOvL,WAInB,QACI,OAAO0D,ICtCb4H,GAAe,CACjBhD,QAAS,GACTzD,OAAQ,CACJK,IAAK,OACLK,MAAO,sBAgBAT,GAZO,WAAiC,IAAhCpB,EAA+B,uDAAzB4H,GAAcC,EAAW,uCAClD,OAAOA,EAAOjK,MACV,IAAK,cACD,OAAO,2BACAoC,GADP,IAEImB,OAAQ0G,EAAO1G,SAEvB,QACI,OAAOnB,IChBb4H,GAAe,CACjBzF,QAAS,ICDPyF,GAAe,CACjB7E,OAAQ,ICiBNgF,GAAWC,aAAgB,CACI9H,iBAAegB,iBAAeE,iBAAeC,cFhBrD,WAAiC,IAAhCrB,EAA+B,uDAAzB4H,GAAcC,EAAW,uCACzD,OAAQA,EAAOjK,MACX,IAAK,gBACD,OAAO,2BACAoC,GADP,IAEImC,QAASnC,EAAMmC,QACVzC,KAAI,SAAA4C,GAAM,OAAIA,EAAOd,MAAQqG,EAAOvF,OAAOd,IAAMqG,EAAOvF,OAASA,OAE9E,IAAK,gBACD,OAAO,2BACAtC,GADP,IAEImC,QAASnC,EAAMmC,QAAQgE,QAAO,SAAA7D,GAAM,OAAIA,EAAOd,MAAQqG,EAAO3F,cAEtE,IAAK,0BACD,OAAO,2BACAlC,GADP,IAEImC,QAAS0F,EAAO1F,QAChBpB,SAAU8G,EAAO9G,WAEzB,IAAK,cACD,OAAO,2BACAf,GADP,IAEImC,QAAS0F,EAAO1F,UAExB,IAAK,2BACD,OAAO,2BACAnC,GADP,IAEImC,QAAQ,GAAD,oBACAnC,EAAMmC,SADN,CAEH0F,EAAOvF,WAGnB,QACI,OAAOtC,IEjB8EoC,aDhBrE,WAAiC,IAAhCpC,EAA+B,uDAAzB4H,GAAcC,EAAW,uCACxD,OAAQA,EAAOjK,MACX,IAAK,eACD,OAAO,2BACAoC,GADP,IAEI+C,OAAQ/C,EAAM+C,OACTrD,KAAI,SAAAuD,GAAK,OAAIA,EAAMzB,MAAQqG,EAAO5E,MAAMzB,IAAMqG,EAAO5E,MAAQA,OAE1E,IAAK,eACD,OAAO,2BACAjD,GADP,IAEI+C,OAAQ/C,EAAM+C,OAAOoD,QAAO,SAAAlD,GAAK,OAAIA,EAAMzB,MAAQqG,EAAOhK,aAElE,IAAK,yBAED,OAAO,2BACAmC,GADP,IAEI+C,OAAQ8E,EAAO9E,OACfb,SAAU2F,EAAO3F,WAIzB,IAAK,yBACD,OAAO,2BACAlC,GADP,IAEInC,QAASgK,EAAOhK,UAGxB,IAAK,cACD,OAAO,2BACAmC,GADP,IAEI+C,OAAQ8E,EAAO9E,SAEvB,IAAK,0BACD,OAAO,2BACA/C,GADP,IAEI+C,OAAO,GAAD,oBACC/C,EAAM+C,QADP,CAEF8E,EAAO5E,UAGnB,QACI,OAAOjD,MCxBbiI,GAAQC,aAAYH,IAE1BI,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,IACb,kBAAC,GAAD,OAEJI,SAASC,eAAe,SfwGtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7L,MAAK,SAAA8L,GACJA,EAAaC,gBAEdtC,OAAM,SAAAC,GACL9G,QAAQ8G,MAAMA,EAAMsC,c","file":"static/js/main.da220778.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>\r\n                    Edit <code>src/App.js</code> and save to reload.\r\n                </p>\r\n                <a\r\n                    className=\"App-link\"\r\n                    href=\"https://reactjs.org\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Learn React\r\n                </a>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const url = \"https://wbdv-generic-server.herokuapp.com/api/alkhalifas/courses\"\r\n\r\nexport const findCourseById = (courseId) =>\r\n    fetch(`${url}/${courseId}`)\r\n        .then(response => response.json())\r\n\r\nexport const findAllCourses = () =>\r\n    fetch(url)\r\n        .then(response => response.json())\r\n\r\nexport const createCourse = (newCourse) =>\r\n    fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(newCourse),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteCourse = (courseId) =>\r\n    fetch(`${url}/${courseId}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const updateCourse = (courseId, newCourse) =>\r\n    fetch(`${url}/${courseId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newCourse),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())","const WIDGET_URL = \"https://cs5610-server-java-alkhalifas.herokuapp.com/api/widgets\"\r\nconst TOPIC_URL  = \"https://cs5610-server-java-alkhalifas.herokuapp.com/api/topics\"\r\n\r\nconst findAllWidgets = () =>\r\n    fetch(WIDGET_URL)\r\n        .then(response => response.json())\r\n\r\nconst findWidgetsForTopic = (topicId) =>\r\n    fetch(`${TOPIC_URL}/${topicId}/widgets`)\r\n         .then(response => response.json())\r\n\r\n\r\nconst createWidget = () =>\r\nfetch(WIDGET_URL, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({name: \"New Widget\",\r\n                                    type: \"HEADING\",\r\n                                    }),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nconst createWidgetForTopic = (topicId, widget) =>\r\n    fetch(`${TOPIC_URL}/${topicId}/widgets`,\r\n          {\r\n              method: \"POST\",\r\n              body: JSON.stringify({widget}),\r\n              headers: {\r\n                  \"content-type\": \"application/json\"\r\n              }\r\n          })\r\n        .then(response => response.json())\r\n\r\nexport const updateWidget = (widgetId, newWidget) =>\r\n    fetch(`${WIDGET_URL}/${widgetId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(newWidget),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    }).then(response => response.json())\r\n\r\nexport const deleteWidget = (widgetId) =>\r\n    fetch(`${WIDGET_URL}/${widgetId}`, {\r\n        method: \"DELETE\"\r\n    })\r\n\r\n\r\nexport default {\r\n    findAllWidgets, createWidget, findWidgetsForTopic, createWidgetForTopic, deleteWidget, updateWidget\r\n}\r\n","import React from \"react\";\r\nimport \"./WidgetComponent.css\"\r\n\r\nconst HeadingWidgetComponent = (\r\n    {\r\n        editing,\r\n        widget,\r\n        deleteWidget,\r\n        updateWidget,\r\n        topicId,\r\n        findWidgetsForTopic\r\n    }) =>\r\n    <div>\r\n        {/*{console.log(\"EDITING WIDGET: \", editing)}*/}\r\n        {\r\n            editing &&\r\n            <div className=\"container border rounded m-2 p-3 shadow-sm\" style={{width: widget.width, height: widget.height}}>\r\n                <div className=\"row m-2\">\r\n                    <h3 className=\"col-6\">{widget.type} Widget</h3>\r\n                    {/*{console.log(\"WIDGET ORDER: \", widget.widgetOrder)}*/}\r\n\r\n                    <button className=\"btn btn-warning\"\r\n                            onClick={(event) => updateWidget({\r\n                                ...widget,\r\n                                widgetOrder: widget.widgetOrder + 1\r\n                                                             })}\r\n                    ><i className=\"fas fa-arrow-up\"></i></button>\r\n                    <button className=\"btn btn-warning\"\r\n                            onClick={(event) => updateWidget({\r\n                                                                 ...widget,\r\n                                                                 widgetOrder: widget.widgetOrder - 1\r\n                                                             })}\r\n                    ><i className=\"fas fa-arrow-down\"></i></button>\r\n                    <button className=\"btn btn-danger\"\r\n                            onClick={() =>deleteWidget(widget.id)}\r\n\r\n                    ><i className=\"fas fa-window-close\"></i></button>\r\n\r\n                    <select className=\"form-control col-3\"\r\n                            value={widget.type}\r\n                            onChange={(event) => updateWidget({\r\n                                                                  ...widget,\r\n                                                                  type: event.target.value\r\n                                                              })}>\r\n                        {/*{console.log(\"WIDGET TYPE BEFORE: \", widget.type)}*/}\r\n                        <option value=\"HEADING\">Heading</option>\r\n                        <option value=\"PARAGRAPH\">Paragraph</option>\r\n                        <option value=\"LIST\">List</option>\r\n                        <option value=\"IMAGE\">Image</option>\r\n\r\n                    </select>\r\n                    <div className=\"ml-3\">\r\n                        <h6>{widget.widgetOrder}</h6>\r\n                    </div>\r\n                </div>\r\n\r\n                    <select className=\"form-control\"\r\n                            value={widget.size}\r\n                            onChange={(event) => updateWidget({\r\n                                                                  ...widget,\r\n                                                                  size: event.target.value\r\n                                                              })}\r\n                            >\r\n                        {/*{console.log(\"WIDGET SIZE BEFORE: \", widget.size)}*/}\r\n                        <option value=\"Heading 1\">Heading 1</option>\r\n                        <option value=\"Heading 2\">Heading 2</option>\r\n                        <option value=\"Heading 3\">Heading 3</option>\r\n                        <option value=\"Heading 4\">Heading 4</option>\r\n                        <option value=\"Heading 5\">Heading 5</option>\r\n                    </select>\r\n                {/*{console.log(\"WIDGET SIZE AFTER: \", widget.text)}*/}\r\n                <div>\r\n                    <input placeholder={widget.name} className=\"form-control\"\r\n                           onChange={(event) => updateWidget({\r\n                                                                 ...widget,\r\n                                                                 name: event.target.value\r\n                                                             })}\r\n                                                                       />\r\n\r\n                </div>\r\n            </div>\r\n        }\r\n        {\r\n            !editing &&\r\n            <div className=\"container border rounded-5 m-2 p-3 shadow-sm\" style={{width: widget.width, height: 100}}>\r\n                <div className=\"row m-2\">\r\n                    {\r\n                        widget.size === \"Heading 1\" &&\r\n                        <h1>{widget.name}</h1>\r\n                    }\r\n                    {\r\n                        widget.size === \"Heading 2\" &&\r\n                        <h2>{widget.name}</h2>\r\n                    }\r\n                    {\r\n                        widget.size === \"Heading 3\" &&\r\n                        <h3>{widget.name}</h3>\r\n                    }\r\n                    {\r\n                        widget.size === \"Heading 4\" &&\r\n                        <h4>{widget.name}</h4>\r\n                    }\r\n                    {\r\n                        widget.size === \"Heading 5\" &&\r\n                        <h5>{widget.name}</h5>\r\n                    }\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n\r\nexport default HeadingWidgetComponent\r\n","import React from \"react\";\r\n\r\nconst ParagraphWidgetComponent = (\r\n    {\r\n        editing,\r\n        widget,\r\n        deleteWidget,\r\n        updateWidget\r\n    }\r\n\r\n) =>\r\n    <div>\r\n        {/*{console.log(\"EDITING WIDGET: \", editing)}*/}\r\n        {\r\n            editing &&\r\n            <div className=\"container border rounded m-2 p-3 shadow-sm\" style={{width: widget.width, height: widget.height}}>\r\n                <div className=\"row m-2\">\r\n                    <h3 className=\"col-6\">{widget.type} Widget</h3>\r\n\r\n                    <button className=\"btn btn-warning\"\r\n                            onClick={(event) => updateWidget({\r\n                                                                 ...widget,\r\n                                                                 widgetOrder: widget.widgetOrder + 1\r\n                                                             })}\r\n                    ><i className=\"fas fa-arrow-up\"></i></button>\r\n                    <button className=\"btn btn-warning\"\r\n                            onClick={(event) => updateWidget({\r\n                                                                 ...widget,\r\n                                                                 widgetOrder: widget.widgetOrder - 1\r\n                                                             })}\r\n                    ><i className=\"fas fa-arrow-down\"></i></button>\r\n                    <button className=\"btn btn-danger\"\r\n                            onClick={() =>deleteWidget(widget.id)}>\r\n                        <i className=\"fas fa-window-close\"></i>\r\n                    </button>\r\n\r\n                    <select className=\"form-control col-3\"\r\n                            value={widget.type}\r\n                            onChange={(event) => updateWidget({\r\n                                                                  ...widget,\r\n                                                                  type: event.target.value\r\n                                                              })}>\r\n                        {/*{console.log(\"WIDGET TYPE BEFORE: \", widget.type)}*/}\r\n                        <option value=\"HEADING\">Heading</option>\r\n                        <option value=\"PARAGRAPH\">Paragraph</option>\r\n                        <option value=\"LIST\">List</option>\r\n                        <option value=\"IMAGE\">Image</option>\r\n\r\n                    </select>\r\n                    <div className=\"ml-3\">\r\n                        <h6>{widget.widgetOrder}</h6>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n                {/*{console.log(\"WIDGET SIZE AFTER: \", widget.size)}*/}\r\n                <div>\r\n                    <textarea\r\n                        placeholder={widget.text}\r\n                        className=\"form-control\"\r\n                        onChange={(event) => updateWidget({\r\n                                                                 ...widget,\r\n                                                              text: event.target.value\r\n                                                             })}\r\n                    />\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        }\r\n        {\r\n            !editing &&\r\n            <div className=\"container border rounded m-2 shadow-sm\" style={{width: widget.width, height: widget.height}}>\r\n                <div className=\"row m-3\">\r\n                    {/*<h3>{widget.type} Widget</h3>*/}\r\n                    <h5>{widget.text}</h5>\r\n                </div>\r\n\r\n            </div>\r\n        }\r\n    </div>\r\n\r\n\r\n\r\nexport default ParagraphWidgetComponent\r\n","import React from \"react\";\r\nimport \"./WidgetComponent.css\"\r\n\r\nconst ListWidgetComponent = (\r\n    {\r\n        editing,\r\n        widget,\r\n        deleteWidget,\r\n        updateWidget,\r\n        topicId,\r\n        findWidgetsForTopic,\r\n        listOfItems = widget.text.split(/\\n/)\r\n    }) =>\r\n    <div>\r\n        {/*{console.log(\"EDITING WIDGET: \", editing)}*/}\r\n        {\r\n            editing &&\r\n            <div className=\"container border rounded m-2 p-3 shadow-sm\" style={{width: widget.width, height: 300}}>\r\n                <div className=\"row m-2\">\r\n                    <h3 className=\"col-6\">{widget.type} Widget</h3>\r\n\r\n                    <button className=\"btn btn-warning\"\r\n                            onClick={(event) => updateWidget({\r\n                                                                 ...widget,\r\n                                                                 widgetOrder: widget.widgetOrder + 1\r\n                                                             })}\r\n                    ><i className=\"fas fa-arrow-up\"></i></button>\r\n                    <button className=\"btn btn-warning\"\r\n                            onClick={(event) => updateWidget({\r\n                                                                 ...widget,\r\n                                                                 widgetOrder: widget.widgetOrder - 1\r\n                                                             })}\r\n                    ><i className=\"fas fa-arrow-down\"></i></button>\r\n\r\n                    <button className=\"btn btn-danger\"\r\n                            onClick={() =>deleteWidget(widget.id)}>\r\n                        <i className=\"fas fa-window-close\"></i>\r\n                    </button>\r\n\r\n                    <select className=\"form-control col-3\"\r\n                            value={widget.type}\r\n                            onChange={(event) => updateWidget({\r\n                                                                  ...widget,\r\n                                                                  type: event.target.value\r\n                                                              })}>\r\n                        {/*{console.log(\"WIDGET TYPE BEFORE: \", widget.type)}*/}\r\n                        <option value=\"HEADING\">Heading</option>\r\n                        <option value=\"PARAGRAPH\">Paragraph</option>\r\n                        <option value=\"LIST\">List</option>\r\n                        <option value=\"IMAGE\">Image</option>\r\n\r\n                    </select>\r\n                    <div className=\"ml-3\">\r\n                        <h6>{widget.widgetOrder}</h6>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n                {/*{console.log(\"WIDGET LIST Before: \", listOfItems)}*/}\r\n                <div>\r\n                    <textarea\r\n                        placeholder={widget.text}\r\n                        id = \"listOfItems\"\r\n                        style={{height:150}}\r\n                        value={widget.text}\r\n                        className=\"form-control\"\r\n                        onChange={(event) => {\r\n                            widget.text = event.target.value;\r\n                            listOfItems = widget.text.split(/\\n/);\r\n                            updateWidget({\r\n                                                              ...widget,\r\n                                                              text: event.target.value,\r\n                                                          })}}\r\n                    />\r\n                    {/*{console.log(\"WIDGET LIST After: \", listOfItems)}*/}\r\n\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                    <select className=\"form-control\"\r\n                            value={widget.value}\r\n                            onChange={(event) => updateWidget({\r\n                                                                  ...widget,\r\n                                                                  value: event.target.value\r\n                                                              })}>\r\n                        <option value=\"ORDERED\">Ordered</option>\r\n                        <option value=\"UNORDERED\">Unordered</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n        }\r\n        {console.log(\"WIDGET VALUE: \", widget.value)}\r\n\r\n        {\r\n            !editing && widget.value === \"ORDERED\" &&\r\n            <div className=\"container border rounded m-2 shadow-sm\" style={{width: widget.width, height: 150}}>\r\n                <div className=\"row m-3\">\r\n                    <h6>Ordered</h6>\r\n                    <ol>\r\n                        {\r\n                            listOfItems.map(item =>\r\n                                <li>{item}</li>)\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        }\r\n        {\r\n            !editing && widget.value === \"UNORDERED\" &&\r\n            <div className=\"container border rounded m-2 shadow-sm\" style={{width: widget.width, height: 150}}>\r\n                <div className=\"row m-3\">\r\n                    <h6>Unordered</h6>\r\n                    <ul>\r\n                        {\r\n                            listOfItems.map(item =>\r\n                                                <li\r\n                                                key=\"item\">{item}</li>)\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n\r\nexport default ListWidgetComponent\r\n","import React from \"react\";\r\nimport \"./WidgetComponent.css\"\r\n\r\nconst ImageWidgetComponent = (\r\n    {\r\n        editing,\r\n        widget,\r\n        deleteWidget,\r\n        updateWidget,\r\n        topicId,\r\n        findWidgetsForTopic,\r\n        listOfItems = widget.text.split(/\\n/)\r\n    }) =>\r\n    <div>\r\n        {/*{console.log(\"EDITING WIDGET: \", editing)}*/}\r\n        {\r\n            editing &&\r\n            <div className=\"container border rounded m-2 p-3 shadow-sm\" style={{width: widget.width, height: widget.height}}>\r\n                <div className=\"row m-2\">\r\n                    <h3 className=\"col-6\">{widget.type} Widget</h3>\r\n                    {/*{console.log(\"WIDGET ORDER: \", widget.widgetOrder)}*/}\r\n\r\n                    <button className=\"btn btn-warning\"\r\n                            onClick={(event) => updateWidget({\r\n                                                                 ...widget,\r\n                                                                 widgetOrder: widget.widgetOrder + 1\r\n                                                             })}\r\n                    ><i className=\"fas fa-arrow-up\"></i></button>\r\n                    <button className=\"btn btn-warning\"\r\n                            onClick={(event) => updateWidget({\r\n                                                                 ...widget,\r\n                                                                 widgetOrder: widget.widgetOrder - 1\r\n                                                             })}\r\n                    ><i className=\"fas fa-arrow-down\"></i></button>\r\n                    <button className=\"btn btn-danger\"\r\n                            onClick={() =>deleteWidget(widget.id)}\r\n\r\n                    ><i className=\"fas fa-window-close\"></i></button>\r\n\r\n                    <select className=\"form-control col-3\"\r\n                            value={widget.type}\r\n                            onChange={(event) => updateWidget({\r\n                                                                  ...widget,\r\n                                                                  type: event.target.value\r\n                                                              })}>\r\n                        {/*{console.log(\"WIDGET TYPE BEFORE: \", widget.type)}*/}\r\n                        <option value=\"HEADING\">Heading</option>\r\n                        <option value=\"PARAGRAPH\">Paragraph</option>\r\n                        <option value=\"LIST\">List</option>\r\n                        <option value=\"IMAGE\">Image</option>\r\n\r\n                    </select>\r\n                    <div className=\"ml-3\">\r\n                        <h6>{widget.widgetOrder}</h6>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*{console.log(\"WIDGET SIZE AFTER: \", widget.size)}*/}\r\n                <div>\r\n                    <input placeholder={widget.url}\r\n                           className=\"form-control\"\r\n                           onChange={(event) => updateWidget({\r\n                                                                 ...widget,\r\n                                                                 url: event.target.value\r\n                                                             })}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        }\r\n        {\r\n            !editing &&\r\n            <div className=\"container border rounded-5 m-2 p-3 shadow-sm\" style={{width: widget.width, height: 400}}>\r\n                <div className=\"row m-2\">\r\n                    <img\r\n                        className=\"imageAspectRatio text-center img-fluid\"\r\n                        src={widget.url}/>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n\r\nexport default ImageWidgetComponent\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { orderBy } from \"lodash\";\r\nimport {\r\n    createWidget,\r\n    deleteWidget,\r\n    updateWidget,\r\n    editWidget,\r\n    okWidget, changeEditing, createWidgetForTopic,\r\n} from \"../../actions/widgetActions\";\r\nimport HeadingWidgetComponent from \"./widgets/HeadingWidgetComponent\";\r\nimport ParagraphWidgetComponent from \"./widgets/ParagraphWidgetComponent\";\r\nimport widgetService from \"../../services/WidgetService\";\r\nimport ListWidgetComponent from \"./widgets/ListWidgetComponent\";\r\nimport ImageWidgetComponent from \"./widgets/ImageWidgetComponent\";\r\n\r\n// function compare( a, b ) {\r\n//     if ( a.widgetOrder < b.widgetOrder ){\r\n//         return -1;\r\n//     }\r\n//     if ( a.widgetOrder > b.widgetOrder ){\r\n//         return 1;\r\n//     }\r\n//     return 0;\r\n// }\r\n\r\nconst WidgetListComponent = ({\r\n                        editing=true,\r\n                        widgets=[],\r\n                        deleteWidget,\r\n                        createWidget,\r\n                        changeEditing,\r\n                        createWidgetForTopic,\r\n                        // findWidgetsForTopic,\r\n                        updateWidget,\r\n                        editWidget,\r\n                        topicId,\r\n                        okWidget}) =>\r\n    <div className=\"container\">\r\n\r\n        <div className=\"row\">\r\n            <h1 className=\"\">Widgets:</h1>\r\n            {/*{this.state.widget.title}*/}\r\n            {/*{console.log(\"~~~~ HERE\", widgets)}*/}\r\n            {/*{ widgets.push({\"id\":\"123\", \"type\":\"HEADING\", \"name\":\"TEST\"})}*/}\r\n\r\n            <div className=\"col-8\">\r\n                {/*<button className=\"btn btn-danger mr-2\">Save</button>*/}\r\n\r\n                <div className=\"custom-switch mt-3 mb-3 float-right\">\r\n                    <input className=\"custom-control-input align-middle\" id=\"switchPrim\"\r\n                           type=\"checkbox\" onClick={() => changeEditing()}/>\r\n                    <label className=\"pull-right custom-control-label inline-block\"\r\n                           htmlFor=\"switchPrim\">Preview</label>\r\n                </div>\r\n\r\n\r\n                {/*<div className=\"form-check form-check-inline\">*/}\r\n                {/*    <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\"*/}\r\n                {/*           id=\"inlineRadio1\" value=\"option1\" onClick={() => changeEditing()}/>*/}\r\n                {/*        <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Editing</label>*/}\r\n                {/*</div>*/}\r\n                {/*<div className=\"form-check form-check-inline\">*/}\r\n                {/*    <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\"*/}\r\n                {/*           id=\"inlineRadio2\" value=\"option2\" onClick={() => changeEditing()}/>*/}\r\n                {/*        <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">Preview</label>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        </div>\r\n\r\n\r\n        {/*{console.log(\"EDITING STATUS:\", editing)}*/}\r\n\r\n        <div className=\"list-group\">\r\n            {/*{widgets.sort((a, b) => (a.widgetOrder > b.widgetOrder) ? 1 : -1)}*/}\r\n            {/*{console.log(widgets.sort())}*/}\r\n            {/*{this.state.widgets.sort( compare )}*/}\r\n\r\n            {/*// filter returns new array*/}\r\n            {/*// sort order.widgetOrder*/}\r\n            {\r\n                widgets.map(widget =>\r\n                                <div key={widget.id}>\r\n                                    {\r\n                                        widget.type === \"HEADING\" &&\r\n                                        <HeadingWidgetComponent widget={widget}\r\n                                                                editing={editing}\r\n                                                                deleteWidget={deleteWidget}\r\n                                                                updateWidget={updateWidget}\r\n                                                                />\r\n                                    }\r\n                                    {\r\n                                        widget.type === \"PARAGRAPH\" &&\r\n                                        <ParagraphWidgetComponent widget={widget}\r\n                                                                  editing={editing}\r\n                                                                  deleteWidget={deleteWidget}\r\n                                                                  updateWidget={updateWidget}/>\r\n                                    }\r\n                                    {\r\n                                        widget.type === \"LIST\" &&\r\n                                        <ListWidgetComponent widget={widget}\r\n                                                                  editing={editing}\r\n                                                                  deleteWidget={deleteWidget}\r\n                                                                  updateWidget={updateWidget}/>\r\n                                    }\r\n                                    {\r\n                                        widget.type === \"IMAGE\" &&\r\n                                        <ImageWidgetComponent widget={widget}\r\n                                                             editing={editing}\r\n                                                             deleteWidget={deleteWidget}\r\n                                                             updateWidget={updateWidget}/>\r\n                                    }\r\n                                </div>\r\n                )\r\n            }\r\n        </div>\r\n\r\n\r\n        {/*{console.log(\"~~~~ topicId HERE\", topicId)}*/}\r\n        {/*        <button*/}\r\n        {/*            className=\"fas fa-plus-circle fa-2x text-center\"*/}\r\n        {/*            onClick={() =>createWidgetForTopic(topicId)}>*/}\r\n        {/*        </button>*/}\r\n        <button\r\n            className=\"btn\"\r\n            onClick={() =>createWidgetForTopic(topicId)}>\r\n            <i aria-hidden=\"true\"\r\n               className=\"fa fa-plus-circle fa-3x \"></i>\r\n        </button>\r\n\r\n    </div>\r\n\r\n// export default WidgetListComponent\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    widgets: state.widgetReducer.widgets,\r\n    topicId: state.widgetReducer.topicId,\r\n    editing: state.widgetReducer.editing\r\n\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    deleteWidget: (widget) => deleteWidget(dispatch, widget),\r\n    createWidget: () => createWidget(dispatch),\r\n    updateWidget: (widget) => updateWidget(dispatch, widget),\r\n    editWidget: (widget) => editWidget(dispatch, widget),\r\n    okWidget: (widget) => okWidget(dispatch, widget),\r\n    changeEditing: () => changeEditing(dispatch),\r\n    createWidgetForTopic: (topicId) => createWidgetForTopic(dispatch, topicId),\r\n    // findWidgetsForTopic: (topicId) => findWidgetsForTopic(topicId)\r\n\r\n})\r\n\r\n\r\nexport default connect\r\n( stateToPropertyMapper,\r\n  propertyToDispatchMapper)\r\n(WidgetListComponent)\r\n","import widgetService from \"../services/WidgetService\"\r\n\r\nexport const DELETE_WIDGET = \"DELETE_WIDGET\"\r\nexport const CREATE_WIDGET = \"CREATE_WIDGET\"\r\nexport const UPDATE_WIDGET = \"UPDATE_WIDGET\"\r\nexport const CHANGE_EDITING = \"CHANGE_EDITING\"\r\n\r\nexport const changeEditing = (dispatch) =>\r\n    dispatch({type: CHANGE_EDITING})\r\n\r\n// Not Needed\r\nexport const editWidget = (dispatch, widget) =>\r\n    dispatch({type: UPDATE_WIDGET, widget: {...widget, editing: true}})\r\n\r\nexport const okWidget = (dispatch, widget) =>\r\n    dispatch({type: UPDATE_WIDGET, widget: {...widget, editing: false}})\r\n\r\n\r\nexport const updateWidget = (dispatch, widget) =>\r\n    widgetService.updateWidget(widget.id, widget)\r\n        .then(status => dispatch({\r\n            type: UPDATE_WIDGET,\r\n            widget: widget\r\n                                 }))\r\n\r\n\r\n// Working!\r\nexport const deleteWidget = (dispatch, widgetId) => {\r\n// {console.log(\"DELETE WIDGET ERROR:\", widgetId)}\r\n    widgetService.deleteWidget(widgetId)\r\n        .then(() => dispatch({\r\n                                 type: \"DELETE_WIDGET\",\r\n                                 widgetId\r\n                             }))\r\n\r\n}\r\n\r\n// Working!\r\nexport const createWidget = (dispatch, topicId) =>\r\n    widgetService.createWidget()\r\n        .then(widget => dispatch({\r\n                                     type: \"CREATE_WIDGET\",\r\n                                     widget\r\n                                 }))\r\n\r\n// Working!\r\nexport const createWidgetForTopic = (dispatch, topicId) =>\r\n    widgetService.createWidgetForTopic(topicId, {\r\n        name: \"New Widget\",\r\n        type: \"PARAGRAPH\",\r\n        text: \"text\",\r\n    })\r\n        .then(widget => dispatch({\r\n                                     type: \"CREATE_WIDGET_FOR_TOPIC\",\r\n                                     widget\r\n                                 }))\r\n\r\n","const courseUrl = \"https://wbdv-generic-server.herokuapp.com/api/alkhalifas/courses\"\r\nconst moduleUrl = \"https://wbdv-generic-server.herokuapp.com/api/alkhalifas/modules\"\r\n\r\nexport const createModuleForCourse = (courseId, newModule) =>\r\n    fetch(`${courseUrl}/${courseId}/modules`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newModule),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    }).then(response => response.json())\r\n\r\nexport const updateModule = (moduleId, newModule) =>\r\n    fetch(`${moduleUrl}/${moduleId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(newModule),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    }).then(response => response.json())\r\n\r\nexport const deleteModule = (moduleId) =>\r\n    fetch(`${moduleUrl}/${moduleId}`, {\r\n        method: \"DELETE\"\r\n    }).then(response => response.json())\r\n\r\nexport const findModulesForCourse = (courseId) =>\r\n    fetch(`${courseUrl}/${courseId}/modules`)\r\n        .then(response => response.json())\r\n\r\nexport const findModules = (moduleId) =>\r\n    fetch(`${moduleUrl}/${moduleId}`)\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    updateModule,\r\n    findModulesForCourse,\r\n    createModuleForCourse,\r\n    deleteModule\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport moduleService from \"../../services/ModuleService\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ModuleListComponent = (\r\n    {\r\n        moduleId,\r\n        course = {},\r\n        modules = [],\r\n\r\n        deleteModule,\r\n        createModule,\r\n        updateModule,\r\n        editModule,\r\n        okModule,\r\n    }) =>\r\n    <div>\r\n        <h1>Modules:</h1>\r\n        <h6>{course.title}</h6>\r\n        <div>\r\n            <ul className=\"list-group table-hover\">\r\n                {modules.map(module =>\r\n                                 <li key={module._id}\r\n                                     className={`list-group-item list-group-item-action ${moduleId === module._id?'active ':''}`}>\r\n\r\n                                     {\r\n                                         !module.editing &&\r\n                                         <span>\r\n\r\n\r\n                                              <Link className={`m-0  ${moduleId === module._id?'text-white ':''}`}\r\n                                                  to={`/edit/${course._id}/modules/${module._id}`}>\r\n                                                {module.title}\r\n                                              </Link>\r\n                                             <span className=\"float-right\">\r\n                                                 <button\r\n                                                     className=\"btn btn-light mr-2 pull-right\"\r\n                                                     onClick={() => editModule(module)}>\r\n                                                <i className=\"far fa-edit\"></i>\r\n                                             </button>\r\n                                             </span>\r\n\r\n                                        </span>\r\n                                     }\r\n\r\n                                     {\r\n                                         module.editing &&\r\n                                         <span>\r\n                                                <input\r\n                                                    onChange={(event) => updateModule({\r\n                                                                                          ...module,\r\n                                                                                          title: event.target.value\r\n                                                                                      })}\r\n                                                    value={module.title}/>\r\n                                                    <button\r\n                                                        className=\"btn btn-primary \"\r\n                                                        onClick={() => okModule(module)}>\r\n                                                    <i className=\"far fa-save float-right\"></i>\r\n                                               </button>\r\n                                                 <button\r\n                                                     className=\"btn btn-primary float-right\"\r\n                                                     onClick={() => deleteModule(module)}>\r\n                                                     <i className=\"fas fa-trash-alt\"></i>\r\n                                                   </button>\r\n                                         </span>\r\n                                     }\r\n\r\n\r\n                                     <span >\r\n\r\n                                     </span>\r\n\r\n\r\n                                 </li>\r\n                )\r\n                }\r\n                <li className=\"list-group-item list-group-item-action\">\r\n                    <div className=\"text-center\">\r\n                        <button\r\n                            className=\"btn\"\r\n                            onClick={() => createModule(course)}>\r\n                                +\r\n                        </button>\r\n                    </div>\r\n\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n// export default ModuleListComponent\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    modules: state.moduleReducer.modules, // for list of modules\r\n    course: state.courseReducer.course, // for single course\r\n    moduleId: state.lessonReducer.moduleId\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    okModule: (module) =>\r\n        moduleService.updateModule(module._id, {\r\n            ...module, editing: false\r\n        }).then(status => dispatch({\r\n                                       type: \"UPDATE_MODULE\",\r\n                                       module: {...module, editing: false}\r\n                                   })),\r\n    editModule: (module) =>\r\n        moduleService.updateModule(module._id, {\r\n            ...module, editing: true\r\n        }).then(status =>\r\n                    dispatch({\r\n                                 type: \"UPDATE_MODULE\",\r\n                                 module: {...module, editing: true}\r\n                             })),\r\n\r\n    updateModule: (module) =>\r\n        moduleService.updateModule(module._id, module)\r\n            .then(status => dispatch({\r\n                                         type: \"UPDATE_MODULE\",\r\n                                         module: module\r\n                                     })),\r\n\r\n    deleteModule: (module) =>\r\n        moduleService.deleteModule(module._id)\r\n            .then(status => dispatch({\r\n                                         type: \"DELETE_MODULE\",\r\n                                         module: module\r\n                                     })),\r\n    createModule: (course) =>\r\n        moduleService.createModuleForCourse(course._id, {\r\n            title: \"New Module\"\r\n        }).then(actualModule => dispatch({\r\n                                             type: \"CREATE_MODULE_FOR_COURSE\",\r\n                                             module: actualModule\r\n                                         })),\r\n\r\n})\r\n\r\nexport default connect\r\n(stateToPropertyMapper,\r\n propertyToDispatchMapper)\r\n(ModuleListComponent)","const moduleUrl = \"https://wbdv-generic-server.herokuapp.com/api/alkhalifas/modules\"\r\nconst lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/alkhalifas/lessons\"\r\n\r\nexport const createLessonForModule = (moduleId, newLesson) =>\r\n    fetch(`${moduleUrl}/${moduleId}/lessons`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newLesson),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    }).then(response => response.json())\r\n\r\nexport const updateLesson = (lessonId, newLesson) =>\r\n    fetch(`${lessonUrl}/${lessonId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(newLesson),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    }).then(response => response.json())\r\n\r\nexport const deleteLesson = (lessonId) =>\r\n    fetch(`${lessonUrl}/${lessonId}`,{\r\n        method: \"DELETE\"\r\n    }).then(response => response.json())\r\n\r\nexport const findLessonsForModule = (moduleId) =>\r\n    fetch(`${moduleUrl}/${moduleId}/lessons`)\r\n        .then(response => response.json())\r\n\r\nexport const findLesson = (lessonId) =>\r\n    fetch(`${lessonUrl}/${lessonId}`)\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    findLessonsForModule,\r\n    createLessonForModule,\r\n    deleteLesson,\r\n    updateLesson\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport LessonService, {createLessonForModule} from \"../../services/LessonService\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nconst LessonsTabComponent = (\r\n    {\r\n        course = {},\r\n        moduleId,\r\n        lessons = [],\r\n        lessonId,\r\n        createLesson,\r\n        deleteLesson,\r\n        updateLesson,\r\n        editLesson,\r\n        okLesson\r\n    }) =>\r\n    <div>\r\n        <h1>Lessons:</h1>\r\n        <ul className=\"nav nav-tabs\">\r\n            {\r\n                lessons.map(lesson =>\r\n                                <li key={lesson._id}\r\n                                    className=\"nav-item\">\r\n                                    <a className={`nav-link ${lessonId === lesson._id ? 'active'\r\n                                                                                      : ''}`}>\r\n                                        {\r\n                                            !lesson.editing &&\r\n                                            <span>\r\n\r\n                                                <Link\r\n                                                    to={`/edit/${course._id}/modules/${moduleId}/lessons/${lesson._id}`}>\r\n                                                    {lesson.title}\r\n                                                </Link>\r\n\r\n                                                <button\r\n                                                    className=\"btn btn-light btn-sm ml-1\"\r\n                                                    onClick={() => editLesson(lesson)}>\r\n                                                <i className=\"far fa-edit\"></i>\r\n                                                </button>\r\n                                            </span>\r\n                                        }\r\n                                        {\r\n                                            lesson.editing &&\r\n                                            <span>\r\n\r\n                                                <input\r\n                                                    onChange={(event) => updateLesson({\r\n                                                                                          ...lesson,\r\n                                                                                          title: event.target.value\r\n                                                                                      })}\r\n                                                    value={lesson.title}/>\r\n                                                <button\r\n                                                    className=\"btn btn-light btn-sm\"\r\n                                                    onClick={() => okLesson(lesson)}>\r\n                                                    <i className=\"fa fa-check\"></i>\r\n                                                </button>\r\n                                                <button\r\n                                                    className=\"btn btn-light btn-sm\"\r\n                                                    onClick={() => deleteLesson(lesson._id)}>\r\n                                                        <i className=\"fas fa-trash-alt\"></i>\r\n                                                </button>\r\n                                            </span>\r\n                                        }\r\n\r\n                                    </a>\r\n                                </li>\r\n                )\r\n            }\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\">\r\n                    <button\r\n                        className=\"btn btn-light btn-sm ml-2\"\r\n                        onClick={() => createLesson(moduleId)}>\r\n                        +\r\n                    </button>\r\n                </a>\r\n\r\n            </li>\r\n        </ul>\r\n    </div>;\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    lessons: state.lessonReducer.lessons,\r\n    moduleId: state.lessonReducer.moduleId,\r\n    course: state.courseReducer.course, // for single course\r\n    lessonId: state.topicReducer.lessonId\r\n})\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n\r\n    okLesson: (lesson) =>\r\n        LessonService.updateLesson(lesson._id, {\r\n            ...lesson, editing: false\r\n        }).then(status => dispatch({\r\n                                       type: \"UPDATE_LESSON\",\r\n                                       lesson: {...lesson, editing: false}\r\n                                   })),\r\n    editLesson: (lesson) =>\r\n        LessonService.updateLesson(lesson._id, {\r\n            ...lesson, editing: true\r\n        }).then(status =>\r\n                    dispatch({\r\n                                 type: \"UPDATE_LESSON\",\r\n                                 lesson: {...lesson, editing: true}\r\n                             })),\r\n\r\n    updateLesson: (lesson) =>\r\n        LessonService.updateLesson(lesson._id, lesson)\r\n            .then(status => dispatch({\r\n                                         type: \"UPDATE_LESSON\",\r\n                                         lesson: lesson\r\n                                     })),\r\n    deleteLesson: (lessonId) =>\r\n        LessonService.deleteLesson(lessonId)\r\n            .then(status => dispatch({\r\n                                         type: \"DELETE_LESSON\",\r\n                                         lessonId\r\n                                     })),\r\n    createLesson: (moduleId) =>\r\n        LessonService.createLessonForModule(\r\n            moduleId, {\r\n                title: \"New Lesson\"\r\n            })\r\n            .then(actualLesson => dispatch({\r\n                                               type: \"CREATE_LESSON_FOR_MODULE\",\r\n                                               lesson: actualLesson\r\n                                           }))\r\n})\r\n\r\nexport default connect\r\n(stateToPropertyMapper,\r\n dispatchToPropertyMapper)\r\n(LessonsTabComponent)","const lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/alkhalifas/lessons\"\r\nconst topicUrl = \"https://wbdv-generic-server.herokuapp.com/api/alkhalifas/topics\"\r\n\r\nexport const createTopicForLesson = (lessonId, newTopic) =>\r\n    fetch(`${lessonUrl}/${lessonId}/topics`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newTopic),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    }).then(response => response.json())\r\n\r\nexport const updateTopic = (topicId, newTopic) =>\r\n    fetch(`${topicUrl}/${topicId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(newTopic),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    }).then(response => response.json())\r\n\r\nexport const deleteTopic = topicId =>\r\n    fetch(`${topicUrl}/${topicId}`,{\r\n        method: \"DELETE\"\r\n    }).then(response => response.json())\r\n\r\nexport const findTopicsForLesson = (lessonId) =>\r\n    fetch(`${lessonUrl}/${lessonId}/topics`)\r\n        .then(response => response.json())\r\n\r\nexport const findTopic = (topicId) =>\r\n    fetch(`${topicUrl}/${topicId}`)\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    findTopicsForLesson,\r\n    createTopicForLesson,\r\n    deleteTopic,\r\n    updateTopic\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport TopicService from \"../../services/TopicService\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst TopicPillsComponent = (\r\n\r\n    //comes from redux store\r\n    {\r\n        course = {},\r\n        moduleId,\r\n        lessonId,\r\n        topics=[],\r\n        topicId,\r\n        // tempTopicId,\r\n        createTopic,\r\n        deleteTopic,\r\n        updateTopic,\r\n        editTopic,\r\n        okTopic\r\n    }) =>\r\n    <div>\r\n        <h1>Topics:</h1>\r\n        {/*<h6>Course._id ({course._id})</h6>*/}\r\n        {/*<h6>ModuleId ({moduleId})</h6>*/}\r\n        <h6>topicId ({topicId})</h6>\r\n\r\n        <ul className=\"nav nav-pills \">\r\n            {\r\n\r\n                topics.map(topic =>\r\n                               <li key={topic._id}\r\n                                   className=\"nav-item border rounded m-2\">\r\n                                   <a className={`nav-link ${topicId === topic._id?'active':''}`}\r\n                                      data-toggle=\"tab\">\r\n                                       {\r\n                                           !topic.editing &&\r\n                                           <span>\r\n                                               <Link className={`m-0  ${topicId === topic._id?'text-white ':''}`}\r\n                                                   to={`/edit/${course._id}/modules/${moduleId}/lessons/${lessonId}/topics/${topic._id}`}>\r\n                                                    {topic.title}\r\n                                                </Link>\r\n                                               <button\r\n                                                   className=\"btn btn-light btn-sm ml-1\"\r\n                                                   onClick={() => editTopic(topic)}>\r\n                                                <i className=\"far fa-edit\"></i>\r\n                                                </button>\r\n                                           </span>\r\n                                       }\r\n                                       {\r\n                                           topic.editing &&\r\n                                           <span>\r\n                                                <input\r\n                                                    onChange={(event) => updateTopic({\r\n                                                                                          ...topic,\r\n                                                                                          title: event.target.value\r\n                                                                                      })}\r\n                                                    value={topic.title}/>\r\n\r\n                                                <button\r\n                                                    className=\"btn btn-light btn-sm\"\r\n                                                    onClick={() => okTopic(topic)}>\r\n                                                    <i className=\"fa fa-check\"></i>\r\n                                                </button>\r\n                                                <button\r\n                                                    className=\"btn btn-light btn-sm\"\r\n                                                    onClick={() => deleteTopic(topic._id)}>\r\n                                                    <i className=\"fas fa-trash-alt\"></i>\r\n                                                 </button>\r\n                                           </span>\r\n\r\n                                       }\r\n\r\n\r\n                                   </a>\r\n                               </li>\r\n                )\r\n            }\r\n\r\n            <li className=\"nav-item border rounded m-2\">\r\n                <a className=\"nav-link\">\r\n                    <button\r\n                        className=\"btn btn-light btn-sm\"\r\n                        onClick={() => createTopic(lessonId)}>\r\n                          +\r\n                    </button>\r\n                </a>\r\n\r\n            </li>\r\n        </ul>\r\n\r\n\r\n    </div>\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    topics: state.topicReducer.topics,\r\n    topicId: state.topicReducer.topicId,\r\n    lessons: state.topicReducer.lessons,\r\n    lessonId: state.topicReducer.lessonId,\r\n    moduleId: state.lessonReducer.moduleId,\r\n    course: state.courseReducer.course, // for single course\r\n\r\n})\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n    okTopic: (topic) =>\r\n        TopicService.updateTopic(topic._id, {\r\n            ...topic, editing: false\r\n        }).then(status => dispatch({\r\n                                       type: \"UPDATE_TOPIC\",\r\n                                       topic: {...topic, editing: false}\r\n                                   })),\r\n    editTopic: (topic) =>\r\n        TopicService.updateTopic(topic._id, {\r\n            ...topic, editing: true\r\n        }).then(status =>\r\n                    dispatch({\r\n                                 type: \"UPDATE_TOPIC\",\r\n                                 topic: {...topic, editing: true}\r\n                             })),\r\n\r\n    updateTopic: (topic) =>\r\n        TopicService.updateTopic(topic._id, topic)\r\n            .then(status => dispatch({\r\n                                         type: \"UPDATE_TOPIC\",\r\n                                         topic: topic\r\n                                     })),\r\n\r\n    deleteTopic: (topicId) =>\r\n    {\r\n\r\n        TopicService.deleteTopic(topicId)\r\n            .then(status => {\r\n\r\n                dispatch({\r\n                             type: \"DELETE_TOPIC\",\r\n                             topicId\r\n                         })\r\n            })\r\n    },\r\n    createTopic: (lessonId) => {\r\n        TopicService.createTopicForLesson(\r\n            lessonId, {\r\n                title: \"New Topic\"\r\n            })\r\n            .then(actualTopic => {\r\n                dispatch({\r\n                             type: \"CREATE_TOPIC_FOR_LESSON\",\r\n                             topic: actualTopic\r\n                         })\r\n            })\r\n    }\r\n})\r\n\r\n\r\nexport default connect\r\n(stateToPropertyMapper,\r\n dispatchToPropertyMapper)\r\n(TopicPillsComponent)","import React from \"react\";\r\nimport {findCourseById} from \"../../services/CourseService\";\r\nimport WidgetList from \"./WidgetListComponent\";\r\nimport ModuleListComponent from \"./ModuleListComponent\";\r\nimport {connect} from \"react-redux\";\r\nimport moduleService from \"../../services/ModuleService\"\r\nimport lessonService from \"../../services/LessonService\"\r\nimport LessonTabs from \"./LessonsTabComponent\";\r\nimport TopicPillsComponent from \"./TopicPillsComponent\";\r\nimport topicService from \"../../services/TopicService\";\r\nimport WidgetService from \"../../services/WidgetService\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass CourseEditorComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const courseId = this.props.match.params.courseId;\r\n        const moduleId = this.props.match.params.moduleId;\r\n        const lessonId = this.props.match.params.lessonId;\r\n        const topicId = this.props.match.params.topicId;\r\n\r\n\r\n        this.props.findCourseById(courseId);\r\n        this.props.findModulesForCourse(courseId);\r\n        this.props.findLessonsForModule(moduleId);\r\n        this.props.findTopicsForLesson(lessonId);\r\n\r\n        if(courseId) {\r\n            this.props.findCourseById(courseId);\r\n        }\r\n\r\n        if(moduleId) {\r\n            this.props.findLessonsForModule(moduleId);\r\n            this.props.findTopicsForLesson(lessonId)\r\n        }\r\n        if(lessonId) {\r\n            this.props.findTopicsForLesson(lessonId)\r\n        }\r\n\r\n        if(topicId) {\r\n            this.props.findWidgetsForTopic(topicId)\r\n        }\r\n        // this.props.findWidgetsForTopic()\r\n    }\r\n\r\n    // state = {\r\n    //     tempTopicId : this.props.match.params.topidId,\r\n    // }\r\n\r\n    //pulling into a usable variable\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const moduleId = this.props.match.params.moduleId\r\n        const lessonId = this.props.match.params.lessonId\r\n        const topicId = this.props.match.params.topicId\r\n        // const widgets = this.props.match.params.widgets\r\n\r\n        if(moduleId !== prevProps.match.params.moduleId) {\r\n            this.props.findLessonsForModule(moduleId)\r\n        }\r\n\r\n        //Causes Lessons to have topics\r\n        if(lessonId !== prevProps.match.params.lessonId) {\r\n            this.props.findTopicsForLesson(lessonId)\r\n            // {console.log(\"DebugID\", topicId + \"\")}\r\n        }\r\n\r\n        if(topicId !== prevProps.match.params.topicId) {\r\n            this.props.findWidgetsForTopic(topicId)\r\n        }\r\n        if(topicId) {\r\n            this.props.findWidgetsForTopic(topicId)\r\n        }\r\n        // if(widgets) {\r\n        //     this.props.findWidgetsForTopic(topicId)\r\n        // }\r\n        //this.props.findWidgetsForTopic()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"row\">\r\n                    <h1>Course Editor</h1>\r\n                    <button className=\"btn btn-lg\">\r\n                        <Link to=\"/table\" className=\"text-black-50\">\r\n                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\"\r\n                                 className=\"bi bi-x-square-fill\" fill=\"currentColor\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path fillRule=\"evenodd\"\r\n                                      d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm3.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\r\n                            </svg>\r\n                        </Link>\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <ModuleListComponent/>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <LessonTabs/>\r\n                        <TopicPillsComponent/>\r\n                        <WidgetList/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => ({\r\n    course: state.courseReducer.course\r\n})\r\n\r\nconst propertyToDispatchMapper = (dispatch) => ({\r\n    findCourseById: (courseId) => findCourseById(courseId)\r\n        .then(courses => dispatch({\r\n                                           type: \"SET_COURSES\",\r\n                                           course: courses\r\n                                       })),\r\n    findModulesForCourse: (courseId) => moduleService.findModulesForCourse(courseId)\r\n        .then(modules => dispatch({\r\n                                            type: \"FIND_MODULES_FOR_COURSE\",\r\n                                            modules: modules\r\n                                        })),\r\n    findLessonsForModule: (moduleId) =>\r\n        lessonService.findLessonsForModule(moduleId)\r\n            .then(lessons => dispatch({\r\n                                          type: \"FIND_LESSONS_FOR_MODULE\",\r\n                                          lessons,\r\n                                          moduleId\r\n                                      })),\r\n    findTopicsForLesson: (lessonId) =>\r\n        topicService.findTopicsForLesson(lessonId)\r\n            .then(topics => dispatch({\r\n                                          type: \"FIND_TOPICS_FOR_LESSON\",\r\n                                          topics,\r\n                                          lessonId\r\n                                      })),\r\n\r\n    // //move to widget reducer later\r\n    // findWidgetsForTopic: (topicId) => {\r\n    //     dispatch ({\r\n    //         type : \"FIND_WIDGETS_FOR_TOPIC\",\r\n    //         topicId\r\n    // })},\r\n\r\n    findWidgetsForTopic: (topicId) =>\r\n        WidgetService.findWidgetsForTopic(topicId)\r\n            .then(widgets => dispatch({\r\n                                          type: \"FIND_WIDGETS_FOR_TOPIC\",\r\n                                          widgets,\r\n                                          topicId,\r\n                                      })),\r\n\r\n    findAllWidgets: () =>\r\n        WidgetService.findAllWidgets()\r\n            .then(widgets => dispatch({\r\n                                          type: \"FIND_ALL_WIDGETS\",\r\n                                          widgets\r\n                                      })),\r\n\r\n})\r\n\r\nexport default connect\r\n(stateToPropertyMapper, propertyToDispatchMapper)\r\n(CourseEditorComponent)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n\r\nconst LoginComponent = () =>\r\n    <div>\r\n        <div className=\"container\">\r\n\r\n            <h1>Sign In</h1>\r\n            <form>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\" htmlFor=\"username\">\r\n                        Username </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control wbdv-field wbdv-username\" id=\"username\"\r\n                               placeholder=\"Sarah Connor\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\" htmlFor=\"password\">\r\n                        Password </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control wbdv-field wbdv-password\" id=\"password\"\r\n                               placeholder=\"Terminator123\" type=\"password\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\"></label>\r\n                    <div className=\"col-sm-10\">\r\n                        <a className=\"btn btn-primary btn-block wbdv-button wbdv-login\"\r\n                           href=\"../profile/profile.template.client.html\">Sign in</a>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 wbdv-link wbdv-forgot-password\">\r\n                                <a href=\"#\">Forgot Password?</a>\r\n                            </div>\r\n                            <div className=\"col-6 wbdv-link wbdv-register\">\r\n                                <a className=\"float-right\"\r\n                                   href=\"../register/register.template.client.html\">Register</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\"></label>\r\n                    <div className=\"col-sm-10\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <a href=\"../index.html\">Cancel</a>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n\r\nexport default LoginComponent","import React from \"react\";\r\n\r\nconst RegisterComponent = () =>\r\n    <div>\r\n        <div className=\"container\">\r\n\r\n            <h1>Register</h1>\r\n            <form>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\" htmlFor=\"usernameFld\">\r\n                        Username </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control wbdv-field wbdv-username\" id=\"usernameFld\"\r\n                               placeholder=\"Sarah Connor\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\" htmlFor=\"passwordFld\">\r\n                        Password</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control wbdv-field wbdv-password\" id=\"passwordFld\"\r\n                               placeholder=\"Terminator123\" type=\"password\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\" htmlFor=\"verifyPasswordFld\">\r\n                        Verify Password</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control wbdv-field wbdv-password-verify\"\r\n                               id=\"verifyPasswordFld\" placeholder=\"Terminator123\" type=\"password\"/>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\"></label>\r\n                    <div className=\"col-sm-10\">\r\n                        <a className=\"btn btn-primary btn-block wbdv-button wbdv-register\"\r\n                           href=\"../profile/profile.template.client.html\" id=\"registerBtn\">Register\r\n                        </a>\r\n\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 wbdv-link wbdv-forgot-password\">\r\n                                <a href=\"../index.html\">Cancel</a>\r\n                            </div>\r\n                            <div className=\"col-6 wbdv-link wbdv-register\">\r\n                                <a className=\"float-right\"\r\n                                   href=\"../login/login.template.client.html\">Login</a>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n\r\nexport default RegisterComponent","import React from \"react\";\r\n\r\nconst ProfileComponent = () =>\r\n    <div>\r\n\r\n        <div className=\"container\">\r\n            <link href=\"profile.style.client.css\" rel=\"stylesheet\"/>\r\n                <h1>Profile</h1>\r\n                <form>\r\n\r\n                    <div className=\"alert alert-success wbdv-message\" role=\"alert\">\r\n                        Profile was successfully saved!\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label wbdv-field wbdv-username\"\r\n                               htmlFor=\"usernameFld\">\r\n                            Username </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input className=\"form-control\" id=\"usernameFld\"\r\n                                   placeholder=\"Sarah Conner\" readOnly=\"\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\" htmlFor=\"password\">\r\n                            Password </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input className=\"form-control wbdv-field wbdv-password\" id=\"password\"\r\n                                   placeholder=\"Terminator123\" type=\"password\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label wbdv-field wbdv-phone\"\r\n                               htmlFor=\"phoneFld\">\r\n                            Phone </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input className=\"form-control\" id=\"phoneFld\"\r\n                                   placeholder=\"617-111-2222\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label wbdv-field wbdv-email\"\r\n                               htmlFor=\"emailFld\">\r\n                            Email </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input className=\"form-control\" id=\"emailFld\"\r\n                                   placeholder=\"someone@email.com\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label wbdv-field wbdv-role\"\r\n                               htmlFor=\"roleFld\">\r\n                            Role </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <select className=\"form-control\" id=\"roleFld\">\r\n                                <option value=\"Faculty\">Faculty</option>\r\n                                <option value=\"Student\">Student</option>\r\n                                <option value=\"Admin\">Admin</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label wbdv-field wbdv-dob\"\r\n                               htmlFor=\"dobFld\">\r\n                            Date of Birth </label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input className=\"form-control\" id=\"dobFld\" type=\"date\"\r\n                                   value=\"2020-01-01\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\"></label>\r\n                        <div className=\"col-sm-10\">\r\n                            <button className=\"btn btn-primary btn-block wbdv-button wbdv-update\"\r\n                                    id=\"updateBtn\">\r\n                                Update\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\"></label>\r\n                        <div className=\"col-sm-10\">\r\n                            <a className=\"btn btn-danger btn-block wbdv-button wbdv-logout\"\r\n                               href=\"../index.html\" id=\"logoutBtn\">\r\n                                Logout\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n        </div>\r\n\r\n    </div>\r\n\r\nexport default ProfileComponent","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {updateCourse} from \"../services/CourseService\";\r\n\r\nconst courseBeingEdited = false\r\nconst editCourse = () => {}\r\n\r\nexport default class CourseRowComponent extends React.Component {\r\n    state = {\r\n        editing: false,\r\n        course: this.props.course\r\n    }\r\n    render() {\r\n        return(\r\n            <tr>\r\n                <td>\r\n{/*//------------------------------------------- Course Title -------------------------------------//*/}\r\n{/*                    {*/}\r\n{/*                        this.state.editing &&*/}\r\n{/*                        <input*/}\r\n{/*                            className=\"form-control\"*/}\r\n{/*                            onChange={(event) => {*/}\r\n{/*                                const newTitle = event.target.value*/}\r\n{/*                                this.setState(prevState => ({*/}\r\n{/*                                    course: {...prevState.course, title: newTitle}*/}\r\n{/*                                }))}*/}\r\n{/*                            }*/}\r\n{/*                            value={this.state.course.title}/>*/}\r\n{/*                    }*/}\r\n\r\n                    {\r\n                        this.state.editing &&\r\n                        <input\r\n                            className=\"form-control\"\r\n                            onChange={(event) => {\r\n                                const newTitle = event.target.value\r\n                                this.setState(prevState => ({\r\n                                    course: {...prevState.course, title: newTitle}\r\n                                }))}\r\n                            }\r\n                            value={this.state.course.title}/>\r\n                    }\r\n                    {\r\n                        !this.state.editing &&\r\n                        <Link to={`/edit/${this.props.course._id}`}>{this.props.course.title} </Link>\r\n                    }\r\n                </td>\r\n{/*//------------------------------------------- Course Owner -------------------------------------//*/}\r\n                <td>{this.props.course.owner}</td>\r\n{/*//------------------------------------------- Course Modified -------------------------------------//*/}\r\n                <td>{this.props.course.modified}</td>\r\n\r\n{/*//------------------------------------------- Edit/Save Button -------------------------------------//*/}\r\n                <td>\r\n                    {\r\n                        !this.state.editing &&\r\n                        <button\r\n                            onClick={() => this.setState({editing: true})}\r\n                            className=\"btn btn-light\"><i className=\"far fa-edit\"></i></button>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <button className=\"btn btn-light\" onClick={() => {\r\n                            updateCourse(this.state.course._id, this.state.course).then(status => {})\r\n                            this.setState({\r\n                                              editing : false\r\n                                          })\r\n                        }}>\r\n                            <i className=\"far fa-save\"></i>\r\n\r\n                        </button>\r\n                    }\r\n                </td>\r\n{/*//------------------------------------------- Delete Button -------------------------------------//*/}\r\n                <td>\r\n                    <button\r\n                        onClick={() => this.props.deleteCourse(this.props.course)}\r\n                        className=\"btn btn-light\">\r\n                        <i className=\"fas fa-trash-alt\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport CourseRowComponent from \"./CourseRowComponent\";\r\nimport {findAllCourses, updateCourse, deleteCourse, createCourse} from \"../services/CourseService\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass CourseListComponent extends React.Component {\r\n\r\n    state = {\r\n        courses: [],\r\n        courseBeingEdited: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        findAllCourses()\r\n            .then(courses => {\r\n                this.setState({\r\n                                  courses: courses\r\n                              })\r\n            })\r\n    }\r\n\r\n    deleteCourse = (course) => {\r\n        deleteCourse(course._id)\r\n            .then(status => this.setState(prevState =>({\r\n                                              courses: prevState.courses.filter(c => c._id !== course._id)\r\n                                          })\r\n            ))\r\n            .catch(error => {\r\n\r\n            })\r\n    }\r\n\r\n    addCourse = () => {\r\n        const newCourse = {\r\n            title: \"New Course Title Here\",\r\n            owner: \"me\",\r\n            modified: (new Date()).toDateString()\r\n        }\r\n\r\n        createCourse(newCourse)\r\n            .then(actualCourse => this.setState(prevState => ({\r\n                courses: [\r\n                    ...prevState.courses, actualCourse\r\n                ]\r\n            })))\r\n    }\r\n\r\n    editCourse = (course) => {\r\n        this.setState({\r\n                          courseBeingEdited: course\r\n                      })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"row\">\r\n                    <div className= \"col-11\">\r\n                        <h1>Course List For <i>{this.props.instructor}</i></h1>\r\n                    </div>\r\n                    <div className=\"float-right mt-3 col-1\">\r\n                        <button className=\"btn btn-light\">\r\n                            <Link to=\"/grid\"><i className=\"fas fa-th\"></i></Link></button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <table className=\"table table-hover container\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Course Name</th>\r\n                        <th>Owner</th>\r\n                        <th>Last Edited</th>\r\n                        <th> </th>\r\n                        <th> </th>\r\n                        <th> </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.courses.map(course =>\r\n                                                   <CourseRowComponent\r\n                                                       key={course._id}\r\n                                                       deleteCourse={this.deleteCourse}\r\n                                                       course={course}/>\r\n                        )\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n                <button\r\n                    onClick={this.addCourse}\r\n                    className=\"btn btn-success\">\r\n                    Add Course\r\n                </button>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default CourseListComponent","import React from \"react\";\r\nimport {updateCourse} from \"../services/CourseService\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./CourseCardContainer.css\"\r\n\r\n//Change to class to maintain state\r\nclass CourseCardContainer extends React.Component {\r\n\r\n    state = {\r\n        editing: false,\r\n        course: this.props.course\r\n    }\r\n\r\n    render() {\r\n        return(\r\n                <div className=\"card text-white bg-light mb-3 col-lg-2 col-md-4 col-sm-12 m-3\" >\r\n                    <div className=\"text-center\">\r\n                        <i style={{color: 'black'}} className=\"fas fa-8x fa-file-alt m-2\"></i>\r\n                    </div>\r\n                    <div className=\"card-header\">\r\n                        {\r\n                            this.state.editing &&\r\n                            <input\r\n                                className=\"form-control\"\r\n                                onChange={(event) => {\r\n                                    const newTitle = event.target.value\r\n                                    this.setState(prevState => ({\r\n                                        course: {...prevState.course, title: newTitle}\r\n                                    }))}\r\n                                }\r\n                                value={this.state.course.title}/>\r\n                        }\r\n                        {\r\n                            !this.state.editing &&\r\n                            <Link to={`/edit/${this.props.course._id}`}>\r\n                                {`${this.props.course.title.substring(0,30)}...`} </Link>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                        <div className=\"text-black-50\">\r\n                            {this.props.course.modified}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <button\r\n                                onClick={() => this.props.deleteCourse(this.props.course)}\r\n                                className=\"btn btn-light\">\r\n                                <svg className=\"bi bi-trash-fill wbdv-row wbdv-button wbdv-delete\"\r\n                                     fill=\"currentColor\" height=\"1em\" viewBox=\"0 0 16 16\" width=\"1em\"\r\n                                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"\r\n                                        fill-rule=\"evenodd\"></path>\r\n                                </svg>\r\n                            </button>\r\n                            <td>\r\n                                {\r\n                                    !this.state.editing &&\r\n                                    <button\r\n                                        onClick={() => this.setState({editing: true})}\r\n                                        className=\"btn btn-light\"><i className=\"far fa-edit\"></i></button>\r\n                                }\r\n                                {\r\n                                    this.state.editing &&\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            updateCourse(this.state.course._id, this.state.course)\r\n                                                .then(status => this.setState({editing: false}))\r\n                                        }}\r\n                                        className=\"btn btn-dark\"><i className=\"far fa-save\"></i></button>\r\n                                }\r\n                            </td>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseCardContainer\r\n","import React from \"react\";\r\nimport CourseRowComponent from \"./CourseRowComponent\";\r\nimport {findAllCourses, updateCourse, deleteCourse, createCourse} from \"../services/CourseService\";\r\nimport CourseCardContainer from \"./CourseCardContainer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass CourseGridComponent extends React.Component {\r\n\r\n    state = {\r\n        courses: [],\r\n        courseBeingEdited: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        findAllCourses()\r\n            .then(courses => {\r\n                this.setState({\r\n                                  courses: courses\r\n                              })\r\n            })\r\n    }\r\n\r\n    deleteCourse = (course) => {\r\n        deleteCourse(course._id)\r\n            .then(status => this.setState(prevState =>({\r\n                                              courses: prevState.courses.filter(c => c._id !== course._id)\r\n                                          })\r\n            ))\r\n            .catch(error => {\r\n\r\n            })\r\n    }\r\n\r\n    addCourse = () => {\r\n        const newCourse = {\r\n            title: \"New Course Title Here\",\r\n            owner: \"me\",\r\n            modified: (new Date()).toDateString()\r\n        }\r\n\r\n        createCourse(newCourse)\r\n            .then(actualCourse => this.setState(prevState => ({\r\n                courses: [\r\n                    ...prevState.courses, actualCourse\r\n                ]\r\n            })))\r\n    }\r\n\r\n    editCourse = (course) => {\r\n        this.setState({\r\n                          courseBeingEdited: course\r\n                      })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"row\">\r\n                    <div className= \"col-11\">\r\n                        <h1>Course Grid For <i>{this.props.instructor}</i></h1>\r\n                    </div>\r\n                    <div className=\"float-right mt-3 col-1\">\r\n                        <button className=\"btn btn-light\">\r\n                            <Link to=\"/table\"><i className=\"fas fa-th-list\"></i></Link></button>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                    {\r\n                        this.state.courses.map(course =>\r\n                                                   <CourseCardContainer\r\n                                                       key={course._id}\r\n                                                       deleteCourse={this.deleteCourse}\r\n                                                       course={course}/>\r\n                            )\r\n                    }\r\n                    <div className=\"card text-muted bg-light mb-3 col-lg-2 col-md-4 col-sm-12 m-3\" >\r\n                        <div className=\"text-center\">\r\n                            <i style={{color: 'black'}} className=\"fas fa-8x fa-file-alt m-2 text-black-50\"></i>\r\n                        </div>\r\n                        <button\r\n                            onClick={this.addCourse}\r\n                            className=\"btn \">\r\n                            <i style={{color: 'black'}} className=\"fas fa-4x fa-plus-circle m-2 text-black-50\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default CourseGridComponent","import React from \"react\";\r\nconst HomeComponent = () =>\r\n    <div>\r\n        <div className=\"jumbotron text-center\">\r\n            <div className=\"container\">\r\n                <h1 className=\"jumbotron-heading\">Welcome to Whiteboard!</h1>\r\n                <p className=\"lead text-muted\">Whiteboard is an American educational technology\r\n                    company with its\r\n                    corporate headquarters\r\n                    in Boston Massachusetts. It is best known for Whiteboard Learn, a learning\r\n                    management\r\n                    system.\r\n                    Designed at Northeastern University, Whiteboard is one of the most prevalent\r\n                    educational\r\n                    tools for\r\n                    online learning which gained a great deal of traction during the 2020 COVID-19\r\n                    outbreak.\r\n                </p>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"text-center mb-4\">\r\n            <h1 className=\"jumbotron-heading\">Whiteboard Features:</h1>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card mb-4 box-shadow\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Fastest Growing online platform!</h5>\r\n                            <h6 className=\"card-subtitle mb-2 text-muted\">Whiteboard grew by 150% in\r\n                                the\r\n                                year 2020 driven by strong sales and high demand.</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card mb-4 box-shadow\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Most Advanced Educational Tool!</h5>\r\n                            <h6 className=\"card-subtitle mb-2 text-muted\">Whiteboard was rated the\r\n                                nations\r\n                                top education online tool because of its advanced capabilities.</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card mb-4 box-shadow\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Safest for Online Learning</h5>\r\n                            <h6 className=\"card-subtitle mb-2 text-muted\">In 2020, Whiteboard was\r\n                                rated the\r\n                                safest environment for online learning by the department of\r\n                                education.</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card mb-4 box-shadow\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Most Affordable tool</h5>\r\n                            <h6 className=\"card-subtitle mb-2 text-muted\">As one of the largest\r\n                                platforms,\r\n                                Whiteboard was rated as the most affordable tool for online\r\n                                education.</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card mb-4 box-shadow\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Effective Learning</h5>\r\n                            <h6 className=\"card-subtitle mb-2 text-muted\">Whiteboard was noted to be\r\n                                the\r\n                                most effective tool for online learning, even for students that\r\n                                prefer\r\n                                in-person learning..</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card mb-4 box-shadow\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">Easy to Learn</h5>\r\n                            <h6 className=\"card-subtitle mb-2 text-muted\">Whiteboard was rated as\r\n                                one of the\r\n                                best user-friendly platforms when it comes to online education tools\r\n                                in\r\n                                2020.</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\nexport default HomeComponent","import React from \"react\";\r\nimport {BrowserRouter, Route, Link} from \"react-router-dom\";\r\nimport LoginComponent from \"../components/users/LoginComponent\";\r\nimport RegisterComponent from \"../components/users/RegisterComponent\";\r\nimport ProfileComponent from \"../components/users/ProfileComponent\";\r\nimport CourseListComponent from \"../components/CourseListComponent\";\r\nimport CourseEditorComponent from \"../components/CourseEditor/CourseEditorComponent\";\r\nimport CourseGridComponent from \"../components/CourseGridComponent\";\r\nimport HomeComponent from \"../components/users/HomeComponent\";\r\n\r\nexport class CourseManagerContainer extends React.Component {\r\n    state = {\r\n        courses: [],\r\n        layout: \"table\"\r\n    }\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"container\">\r\n                    <nav\r\n                        className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark wbdv-field wbdv-hamburger\">\r\n                        <a className=\"navbar-brand\" href=\"#\"><h3>Whiteboard</h3></a>\r\n                        <button aria-controls=\"navbarText\" aria-expanded=\"false\"\r\n                                aria-label=\"Toggle navigation\" className=\"navbar-toggler\"\r\n                                data-target=\"#navbarText\" data-toggle=\"collapse\" type=\"button\">\r\n\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <Link to=\"/\" className=\"mr-2 text-white\">Home </Link>\r\n                                <Link to=\"/login\" className=\"mr-2 text-white\">Login </Link>\r\n                                <Link to=\"/register\" className=\"mr-2 text-white\">Register </Link>\r\n                                <Link to=\"/profile\" className=\"mr-2 text-white\">Profile </Link>\r\n                                <Link to=\"/table\" className=\"mr-2 text-white\">Course Manager</Link>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    <div>\r\n                        <h1> </h1>\r\n                        <h1>\" \"</h1>\r\n\r\n                    </div>\r\n                    {/*<Link to=\"/login\">LoginComponent</Link> |*/}\r\n                    {/*<Link to=\"/register\">RegisterComponent</Link> |*/}\r\n                    {/*<Link to=\"/profile\">ProfileComponent</Link> |*/}\r\n                    {/*<Link to=\"/table\">Courses</Link> |*/}\r\n                    {/*<Link to=\"/grid\">Grid</Link> |*/}\r\n                    {/*<Link to=\"/edit\">Editor</Link>*/}\r\n                    <Route path=\"/\" exact component={HomeComponent}/>\r\n                    <Route path=\"/login\" exact component={LoginComponent}/>\r\n                    <Route path=\"/register\" exact component={RegisterComponent}/>\r\n                    <Route path=\"/profile\" exact component={ProfileComponent}/>\r\n                    <Route path=\"/table\" exact>\r\n                        <CourseListComponent courses={this.state.courses} instructor=\"Saleh Alkhalifa\"/>\r\n                    </Route>\r\n                    <Route path=\"/grid\" exact>\r\n                        <CourseGridComponent courses={this.state.courses} instructor=\"Saleh Alkhalifa\"/>\r\n                    </Route>\r\n\r\n                    <Route\r\n                        path={[\"/edit/:courseId\",\r\n                               \"/edit/:courseId/modules/:moduleId\",\r\n                               \"/edit/:courseId/modules/:moduleId/lessons/:lessonId\",\r\n                               \"/edit/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId\",\r\n                        ]}\r\n                        exact\r\n                        component={CourseEditorComponent}/>\r\n\r\n\r\n\r\n                    {/*<Route*/}\r\n                    {/*    exact={true}*/}\r\n                    {/*    path=\"/edit/:courseId/modules/:moduleId/lessons/:lessonId/topics/:topicId\"*/}\r\n                    {/*    render={(props) => (*/}\r\n                    {/*        <CourseEditorComponent*/}\r\n                    {/*            courseID={props.match.params.courseID}*/}\r\n                    {/*            moduleID={props.match.params.moduleID}*/}\r\n                    {/*            lessonID={props.match.params.lessonID}*/}\r\n                    {/*            topicId={props.match.params.topicId}*/}\r\n                    {/*        />*/}\r\n                    {/*    )}*/}\r\n                    {/*/>*/}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}","import {DELETE_WIDGET, CREATE_WIDGET, UPDATE_WIDGET, CHANGE_EDITING} from \"../actions/widgetActions\"\r\n\r\nconst initialState = {\r\n    widgets: [],\r\n    editing : false,\r\n}\r\n\r\nconst widgetReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"FIND_WIDGETS_FOR_TOPIC\":\r\n            return {\r\n                ...state,\r\n                widgets: action.widgets,\r\n                topicId: action.topicId\r\n            };\r\n        case \"FIND_ALL_WIDGETS\":\r\n            return {\r\n                ...state,\r\n                widgets: action.widgets\r\n            };\r\n        case CREATE_WIDGET:\r\n            return {\r\n                widgets: [...state.widgets, action.widget]\r\n            };\r\n        case \"CREATE_WIDGET_FOR_TOPIC\":\r\n            return {\r\n                ...state,\r\n                widgets: [\r\n                    ...state.widgets,\r\n                    action.widget\r\n                ]\r\n            };\r\n        case UPDATE_WIDGET:\r\n            return {\r\n                widgets: state.widgets.map(\r\n                    widget => widget.id === action.widget.id ?\r\n                              action.widget : widget)\r\n            };\r\n\r\n        case CHANGE_EDITING:\r\n            return {\r\n                ...state,\r\n                editing: !state.editing\r\n            }\r\n        case DELETE_WIDGET:\r\n        // {console.log(\"DELETE WIDGET ERROR: \", state.widgets.filter(widget => widget !== action.widget))}\r\n        {console.log(\"DELETE WIDGET ERROR: \", action)}\r\n\r\n            return {\r\n                widgets: state.widgets.filter(widget => widget.id !== action.widgetId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default widgetReducer","const initialState = {\r\n    modules: [],\r\n    activeMod: {}\r\n}\r\n\r\nconst moduleReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_MODULE\":\r\n            return {\r\n                ...state,\r\n                modules: state.modules\r\n                    .map(module => module._id === action.module._id ? action.module : module)\r\n            }\r\n        case \"FIND_MODULES_FOR_COURSE\":\r\n            return {\r\n                ...state,\r\n                modules: action.modules\r\n            }\r\n        case \"FIND_MODULE\":\r\n            return {\r\n                ...state,\r\n                modules: action.modules\r\n            }\r\n        case \"DELETE_MODULE\":\r\n            return {\r\n                ...state,\r\n                modules: state.modules.filter(module => module._id !== action.module._id)\r\n            }\r\n        case \"CREATE_MODULE_FOR_COURSE\":\r\n            return {\r\n                ...state,\r\n                modules: [\r\n                    ...state.modules,\r\n                    action.module\r\n                ]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default moduleReducer","const initialState = {\r\n    courses: [],\r\n    course: {\r\n        _id: \"1234\",\r\n        title: \"SOME BOGUS COURSE\"\r\n    }\r\n}\r\n\r\nconst courseReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case \"SET_COURSES\":\r\n            return {\r\n                ...state,\r\n                course: action.course\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default courseReducer","const initialState = {\r\n    lessons: []\r\n}\r\nexport const lessonReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_LESSON\":\r\n            return {\r\n                ...state,\r\n                lessons: state.lessons\r\n                    .map(lesson => lesson._id === action.lesson._id ? action.lesson : lesson)\r\n            };\r\n        case \"DELETE_LESSON\":\r\n            return {\r\n                ...state,\r\n                lessons: state.lessons.filter(lesson => lesson._id !== action.lessonId)\r\n            };\r\n        case \"FIND_LESSONS_FOR_MODULE\":\r\n            return {\r\n                ...state,\r\n                lessons: action.lessons,\r\n                moduleId: action.moduleId\r\n            };\r\n        case \"FIND_LESSON\":\r\n            return {\r\n                ...state,\r\n                lessons: action.lessons\r\n            }\r\n        case \"CREATE_LESSON_FOR_MODULE\":\r\n            return {\r\n                ...state,\r\n                lessons: [\r\n                    ...state.lessons,\r\n                    action.lesson\r\n                ]\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};","const initialState = {\r\n    topics: []\r\n}\r\nexport const topicReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_TOPIC\":\r\n            return {\r\n                ...state,\r\n                topics: state.topics\r\n                    .map(topic => topic._id === action.topic._id ? action.topic : topic)\r\n            };\r\n        case \"DELETE_TOPIC\":\r\n            return {\r\n                ...state,\r\n                topics: state.topics.filter(topic => topic._id !== action.topicId)\r\n            };\r\n        case \"FIND_TOPICS_FOR_LESSON\":\r\n            // console.log(action)\r\n            return {\r\n                ...state,\r\n                topics: action.topics,\r\n                lessonId: action.lessonId,\r\n                //topicId: action.topicId\r\n\r\n            };\r\n        case \"FIND_WIDGETS_FOR_TOPIC\":\r\n            return {\r\n                ...state,\r\n                topicId: action.topicId\r\n            }\r\n\r\n        case \"FIND_TOPICS\":\r\n            return {\r\n                ...state,\r\n                topics: action.topics\r\n            }\r\n        case \"CREATE_TOPIC_FOR_LESSON\":\r\n            return {\r\n                ...state,\r\n                topics: [\r\n                    ...state.topics,\r\n                    action.topic\r\n                ]\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport App from './App';\r\nimport CourseListComponent from \"./components/CourseEditor/CourseEditorComponent\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport CourseEditorComponent from \"./components/CourseEditor/CourseEditorComponent\";\r\nimport {CourseManagerContainer} from \"./containers/CourseManagerContainer\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport widgetReducer from \"./reducers/widgetReducer\";\r\nimport moduleReducer from \"./reducers/moduleReducer\";\r\nimport courseReducer from \"./reducers/courseReducer\";\r\nimport {lessonReducer} from \"./reducers/lessonReducer\";\r\nimport {topicReducer} from \"./reducers/topicReducer\";\r\n// import \"font-awesome/css/font-awesome.min.css\";\r\n\r\nconst reducers = combineReducers({\r\n                                     widgetReducer, moduleReducer, courseReducer, lessonReducer, topicReducer\r\n                                 })\r\nconst store = createStore(reducers)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <CourseManagerContainer/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}